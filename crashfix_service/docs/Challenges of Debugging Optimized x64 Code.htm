

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"> 
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
    <head>
        <!--<meta http-equiv="X-UA-Compatible" content="IE=9; IE=8" />-->
        <meta name="robots" content="index,follow" />
<meta name="description" content="CPR Windbg CDB perfmon netmon kd" />
<meta name="keywords" content="cpr critical problem resolution advanced debugging windows hangs leaks microsoft windows cpu spins blue screen of death BSOD STOP GES ronsto craiga" />
<meta name="GENERATOR" content="Telligent Community 5.6.583.17018 (Build: 5.6.583.17018)" />
<link rel="pingback" href="http://blogs.msdn.com/b/ntdebugging/pingback.aspx" />
<link rel="alternate" type="application/rss+xml" title="Site Home (RSS 2.0)" href="http://blogs.msdn.com/rss.aspx"  />
<link rel="alternate" type="application/rss+xml" title="ntdebug&#39;s Comments (RSS 2.0)" href="/members/ntdebug/comments/rss.aspx"  />
<link rel="alternate" type="application/rss+xml" title="ntdebug&#39;s Activities (RSS 2.0)" href="/members/ntdebug/activities/rss.aspx"  />
<link rel="alternate" type="application/rss+xml" title="Activities of People ntdebug Follows (RSS 2.0)" href="/members/ntdebug/activities/followersrss.aspx"  />
<link rel="alternate" type="application/rss+xml" title="ntdebug&#39;s Groups Activities (RSS 2.0)" href="/members/ntdebug/activities/groupsrss.aspx"  />
<link rel="alternate" type="application/rss+xml" title="Ntdebugging Blog (RSS 2.0)" href="http://blogs.msdn.com/b/ntdebugging/rss.aspx"  />
<link rel="alternate" type="application/atom+xml" title="Ntdebugging Blog (Atom 1.0)" href="http://blogs.msdn.com/b/ntdebugging/atom.aspx"  />
<link rel="alternate" type="application/rss+xml" title="Ntdebugging Blog - All Comments (RSS 2.0)" href="http://blogs.msdn.com/b/ntdebugging/rsscomments.aspx"  />
<link rel="alternate" type="application/rss+xml" title="Challenges of Debugging Optimized x64 Code - Comments for this post (RSS 2.0)" href="http://blogs.msdn.com/b/ntdebugging/rsscomments.aspx?WeblogPostID=9302612"  />

            <link rel="stylesheet" href="/themes/generic/css/layout.css" type="text/css" media="screen" />
        
          <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
          <link rel="shortcut icon" type="image/ico" href="/themes/wireframe/favicon.ico" />
          <link type="text/css" rel="stylesheet" href="/themes/wireframe/css/screen.css" media="screen,print" />
        
          <link type="text/css" rel="stylesheet" href="/themes/blogs/wireframe/css/wireframe.css" media="screen,print" />		
          <link type="text/css" rel="stylesheet" href="/themes/wireframe/css/DynamicStyle.aspx?PreviewKey=0" media="screen,print" />
          <link type="text/css" rel="stylesheet" href="/themes/blogs/wireframe/css/DynamicStyle.aspx?WeblogID=7700&PreviewKey=0" media="screen,print" />
        
          <!--[if lte IE 6]>
              <link type="text/css" rel="stylesheet" href="/themes/wireframe/css/ie6.css" media="screen,print" />
          <![endif]-->
          <link type="text/css" rel="stylesheet" href="/themes/wireframe/css/print.css" media="print" />
        <meta name="msvalidate.01" content="B717AD6FC29D3A844832AF011B5F9E4C" />
<meta name="WT.sp" content="_ntdebugging_">
<meta name="WT.sp_cluster" content="_Platforms_"> <meta name="WT.sp_group" content="_cts_">
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://blogs.msdn.com/b/ntdebugging/rsd.ashx" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" title="WLWManifest" href="http://blogs.msdn.com/b/ntdebugging/wlwmanifest.ashx" />
<title>
	Challenges of Debugging Optimized x64 Code - Ntdebugging Blog - Site Home - MSDN Blogs
</title></head>
	<body spellcheck="true">
		<form name="aspnetForm" method="post" action="/b/ntdebugging/archive/2009/01/09/challenges-of-debugging-optimized-x64-code.aspx" onsubmit="javascript:return WebForm_OnSubmit();" id="aspnetForm">
<div>
<input type="hidden" name="ctl00_content_ctl00_w_16375__9be11d_ctl00_ctl00_ctl00_ctl05_bpCommentForm_ctl05_invisibleCaptcha_answer" id="ctl00_content_ctl00_w_16375__9be11d_ctl00_ctl00_ctl00_ctl05_bpCommentForm_ctl05_invisibleCaptcha_answer" value="" />
<input type="hidden" name="__EVENTTARGET" id="__EVENTTARGET" value="" />
<input type="hidden" name="__EVENTARGUMENT" id="__EVENTARGUMENT" value="" />
<input type="hidden" name="ctl00_content_ctl00_w_16375__9be11d_ctl00_ctl00_ctl00_ctl05_bpCommentForm_ctl05_invisibleCaptcha_encrypted" id="ctl00_content_ctl00_w_16375__9be11d_ctl00_ctl00_ctl00_ctl05_bpCommentForm_ctl05_invisibleCaptcha_encrypted" value="o1fXywb04b3xcvuvQRSZiyTHm+J0jIK0G7/qSPOSqgE=" />
<input type="hidden" name="__VIEWSTATE" id="__VIEWSTATE" value="/wEPDwUKMTM5OTAxNDYyNWRkvI787cXLvh9XHlDReEjVejxzcZ4=" />
</div>

<script type="text/javascript">
//<![CDATA[
var theForm = document.forms['aspnetForm'];
if (!theForm) {
    theForm = document.aspnetForm;
}
function __doPostBack(eventTarget, eventArgument) {
    if (!theForm.onsubmit || (theForm.onsubmit() != false)) {
        theForm.__EVENTTARGET.value = eventTarget;
        theForm.__EVENTARGUMENT.value = eventArgument;
        theForm.submit();
    }
}
//]]>
</script>


<script src="/WebResource.axd?d=Z2cQcTXWgTIacDQe5RRNWmFyimLHJt8vzSXe1uPSng4eqr0myJHiayeAq1crklEPpVKsHC4W0kCtInsSLWolE5Uo5p41&amp;t=634218895411170923" type="text/javascript"></script>


<script src="/WebResource.axd?d=SOm_d8KPCvLZqYHrhruKr9DdER9uVeTCF1FNDrQsmkkW6AGoFUpVPsp_sTVI0yBnuCqmAGaw9mn1GN6KHTm-O-scKjBDPWhJUPaoE5GX-W_PceNeDrCYaZsBFYwMz8SJcVcGWXF1earb2kCelpGh_yHCFNurOjx3n2A7T22-FJOIrny2temFXRG8ehi8UGCKQTTzSM4cj0CEdSfmhseuKk27Fmk1&amp;t=634462368096248087" type="text/javascript"></script>
<script src="/WebResource.axd?d=X_bemaoIL4hjGUz9ZLneLqw-9c9VLtsWZNcpFAvJZjyKqy0p35kk2J5MVTgZ0_e7dzVplzG4gPuhYGCSEZ9_2V48ALIbJSP67YqRe_uBJ_EZoaemm2d7CXOUW-nZ8_pxnmZG0zD-4rwjao05LtAkIZm3fBDpXoPLWyORtmFV3KS69tTk0&amp;t=634462368120894981" type="text/javascript"></script>
<script src="/WebResource.axd?d=3GU3tjSEW1ECXKvAUZHsxDFAslEZgbJjoLfCXBVUTswP5j5YYgW1hzjXqjzKD2dwNn0_t62E4VjYXqkzlUOlcdFK8Z_Brbo2xSEHJwdXoWqZ2JKysmKSDqwNmwzMbkFAkkWixyHGSjXGuv05u78Pi5NT0vd1V1i0XAu44rGfRSX4FePt0&amp;t=634462368120894981" type="text/javascript"></script>
<script src="/WebResource.axd?d=ZNAKjLeYJhqT_oJ98OwZwVJzbm3UJOEc5LdYje7ix7F87IHOHrdtwh0VGbHW1w50Wi1G774JMTJOjcODrws7U3QA83DLFF0NxSeh0X7TA1drh1FHRbbpemnlRUet9k4QWDfNyUfoZvWBZm4x8hX6igDXjctw10e4qulgpzBxItVQN2eu0&amp;t=634462368096248087" type="text/javascript"></script><script type="text/javascript" src="/utility/jquery/jquery-1.5.2.min.js"></script>
<script src="/WebResource.axd?d=6FRFqSBfWW_ZCmFE0BqdIlvcr4zxqdiaWN8vp2XHPAhpG0AD0_NxkFQ1CcKGC40FJPxdj4F8A7tYf9Z_yaF3WsmUxjEtOVMNJXB8Kwa3_EVNAC48gN_yerZiw_aK8Oz17MWCcfozfjgs_8aIixBDL-2IeZQx3Xlbop7fBCJv5wwZ9pQJ0&amp;t=634462368120894981" type="text/javascript"></script>
<script src="/WebResource.axd?d=-I9opVMlYERsOWADr5Ja4RssDj9bjzJHgxNjPQ9OjvoFh9msYez2FDTy088QYu1C72c0WsRQFRwLvbjkl5W-5nUXl_DP64ke9Lcb62qn5BUa-Pc2HN1pvm_BxvRFy0R5YH4IK1QyICM_8SECrbjcS3m5T6W1PwtrsEZAgYO-WlfqJYLwakPjAePpK_rDp4hCPrtBXA2&amp;t=634462368120894981" type="text/javascript"></script>
<script src="/WebResource.axd?d=HaOPiNm1e0sLVdYesQz9mxWwGXMPQMB4pwvUsGB8ZJGyRNswfv6H9HTF-JKe-U2Y1vxDijsXcYELa58DHCNpyH_92CgFm0Ufhn79o8ERhzVbFsOVbA3l7FI1LLkkpikqzv90nK2u1s9OJzHVD9CVAFXD88fLNAeJyjBJ4gdZzh9UGdLy0&amp;t=634462368096248087" type="text/javascript"></script>
<script src="/WebResource.axd?d=5h4uDIKw0jfgLvo3lCMA-4uYbYFLjWH-CYL_-M2qsXt9DrFoEenc0y52xIhQOIuH3vbY259X3nftMHddV3CFRlcHaaTZaWGgUpmuHdITXpKI9rvCcKFLHbyvpaIOj0Z3daJZkb5OxqyK8MexioOup8dp9HMMcUIaOaV45OQR7pBZLMmbWyMtl_nN2Z62vnk7be3DkGA0e424SusmrWa2Gh69sQk1&amp;t=634462368097340038" type="text/javascript"></script><script type="text/javascript" src="/utility/jquery/autoresize.jquery.min.js"></script>
<script src="/WebResource.axd?d=ahlDYNbDLqewiDAWERYywUOtVFS2G5LIDpqT1GeuLSeL9pZ00_hrjGdFvqY_kyCXvYVPgnStzP15cHQkWAzWlCzgdszLOoROgHYM-Q8BV8Z6UyC80&amp;t=634218895411170923" type="text/javascript"></script>
<script src="/WebResource.axd?d=kxj7BEpf5NlDw5wc7ut0Pv8px29_xUzCgrOLbPtW8-bh-LCYGNMq9HKXIglTvHT03YjdsOzDcgCUYb4BvAYLB7xvKXjwAVW45cg2IiRiqOnRu4IiHEtjGR4XUTk9MIpj9rJXW0pty21-xq9AKiCLgWlXTfv2wdtrSq8dEBUpeVtK-4KyLBISa2R357ofdGKEaQOtrA2&amp;t=634462368096248087" type="text/javascript"></script>
<script src="/WebResource.axd?d=g8NlLbN_osz0sxxr-Bna0nHqaizsNTSphFqtHKkDWqiKQsKKuaAQOVQypJLBFBqEvJaa9dJ2zwQ2JliJ5HhivoDHWcQuKR5yA8KFCBHClR8-sqBOFF19sdL8EztLKXVazT-I1lAPYxzE8AVMmxl9C1bu8SgYgaRi4JnPS9I7huwwIo9w0&amp;t=634462368120894981" type="text/javascript"></script>
<script src="/WebResource.axd?d=uV5jECGiS8_GGPpJV2cuiPaxOggI_Y2EpUA7ib1PBadUMhq0cmHRiSADtsCT3nmnKrLT5MkAP8h8F3UMJW_2Z3BSuXdlF27_BqU2j91NEX9nvMQ-sYjrkuE32_4xlcSeX4lK-LKMuS9zQ2YdbgN2JBkNqRRQwxIqGO6XxMTzGcqEcljS5LsQy6GnlKQRDlppAf2smw2&amp;t=634462368096248087" type="text/javascript"></script>
<script src="/WebResource.axd?d=6DtyjlTHYsWSfgn8LS123dLXJsjyvfjZ0Oia-72mAUZG1gOZ3jrGqp_gFPDiYWMqrm5wwHYCagmkeYSJJ8aCdv3j2skd6GY_-ZfcrbUegYvAtAuSLp7uYLU4AAZHCIHpZyVriNhxlPfYHlAdweplddfOsLQ1&amp;t=634462368659070831" type="text/javascript"></script>
<script src="/WebResource.axd?d=TjiNY1rmv8W4Kzz4QZNyp2P63E6t793JZRNHHbvHuWrJaqpghfU8youCEpBAslnDhi_lkdjijHgIojxgUIqfM-y1jhUZUA-jM-Afdq2fsvIyNiGpZ-YmVXiUSdcBUkhRxJsxknB8hZRBkMJhhgaW8RIio1ZUVIB-8C07L5RKMfEOZZh00&amp;t=634462368096248087" type="text/javascript"></script>
<script type="text/javascript">
//<![CDATA[
function WebForm_OnSubmit() {
if (typeof(ValidatorOnSubmit) == "function" && ValidatorOnSubmit() == false) return false;
return true;
}
//]]>
</script>

			
            
                
            
            <div class="header-fragments-header"></div>
<div class="header-fragments"><div class="header-fragment-outer top-bar wireframe-header-fragment-outer wireframe-top-bar"><div class="header-fragment-inner top-bar wireframe-header-fragment-inner wireframe-top-bar"><div class="header-fragment welcome-message" id="header-fragment-247403536">


<!-- always render -->
</div><div class="header-fragment login-logout" id="header-fragment-247403537">





        <div class="navigation-list-header"></div>
        <ul class="navigation-list">

            <li class="navigation-item">
                <span id="ctl00_header_fragment_247403537__9be11d_ctl00_ctl02_ctl05_WLIDLoginButton1" class="internal-link live-id-button"><a href="https://login.live.com/login.srf?wa=wsignin1.0&rpsnv=11&ct=1313476253&rver=6.0.5286.0&wp=MBI&wreply=http:%2F%2Fblogs.msdn.com%2Fb%2Fntdebugging%2Farchive%2F2009%2F01%2F09%2Fchallenges-of-debugging-optimized-x64-code.aspx&lc=1033&id=271611">Sign In</a></span>
            </li>
        </ul>
        <div class="navigation-list-footer"></div>
    </div><div class="header-fragment user-welcome-without-login" id="header-fragment-247403538">

 &nbsp;<!-- always render -->

</div></div></div><div class="header-fragment-outer wireframe-header-fragment-outer site-banner"><div class="header-fragment-inner wireframe-header-fragment-inner site-banner"><div class="header-fragment site-banner" id="header-fragment-247403539">


<div class="site-banner-header"></div>
<div class="site-banner">
    
    
    
            <div class="site-logo"><a href="/">
                    <img src="/themes/MSDN2/images/MSDN/logo_msdn.png" alt="" style="border-width:0px;" />
                </a></div>
        
</div>
<div class="site-banner-footer"></div></div></div></div><div class="header-fragment-outer wireframe-header-fragment-outer search"><div class="header-fragment-inner wireframe-header-fragment-inner search"><div class="header-fragment search" id="header-fragment-247403540">

<script src="/Utility/HeaderFragments/Core/Search.js?Version=5.6.583.17018&amp;LastChanged=634462620319630063" type="text/javascript"></script>

<script type="text/javascript">
	// <![CDATA[
	var Core_Search_AjaxEndpoint = '/Utility/HeaderFragments/Core/SearchAjax.asmx'
	var Core_Search_NoSearchResults = 'No results found'

	var ctl00_header_fragment_247403540={"wrapperId":"header-fragment-247403540","variableName":"ctl00_header_fragment_247403540","parameter":{"popupId":"ctl00_header_fragment_247403540__9be11d_ctl00_SearchPopup","textBoxId":"ctl00_header_fragment_247403540__9be11d_ctl00_SearchText","searchResultWrapperHtmlBlock":"{SearchResults}","searchGroupHtmlBlock":"\r\n\t\t<div class=\"content-list-header\"></div>\r\n\t\t<div class=\"content-list-name\">{ContentName}</div>\r\n\t\t<ul class=\"content-list\">\r\n\t\t\t{ContentItems}\r\n\t\t</ul>\r\n\t\t<div class=\"content-list-footer\"></div>\r\n\t\t","searchItemHtmlBlock":"<li class=\"content-item\"><a href=\"{Link}\" class=\"internal-link {LinkType}\"><span></span>{Title}</a></li>\t\t","searchSearchingHtmlBlock":"<div class=\"message loading\">Searching...</div>","searchNoResultsHtmlBlock":"<div class=\"message norecords\">No results found</div>","showAllHtmlBlock":"<a href=\"{ShowAllLink}\" class=\"internal-link search\"><span></span>Show All...</a>","searchErrorHtmlBlock":"<div class=\"message error\">Search is currently unavailable.</div>","searchOptionsPopup":"ctl00_header_fragment_247403540__9be11d_ctl00_SearchOptionsPopup","searchOptionName":"ctl00_header_fragment_247403540__9be11d_ctl00_filter","lastKeyCode":"","timeout":""}};
		
	$(document).ready(function() {
		Core_Search_Register(ctl00_header_fragment_247403540);
	});
	// ]]>
</script>

<div class="field-list-header">
</div>
<fieldset class="field-list">
	<ul class="field-list">
		<li class="field-item"><span class="field-item-input"><input name="ctl00$header_fragment_247403540$_9be11d$ctl00$SearchText" type="text" maxlength="64" size="15" id="ctl00_header_fragment_247403540__9be11d_ctl00_SearchText" class="search empty" /></span></li>
		
	</ul>
</fieldset>
<div class="field-list-footer">
</div>
<div id="ctl00_header_fragment_247403540__9be11d_ctl00_SearchPopup" style="position:absolute;visibility:hidden;left:-5000px;"></div>

</div></div></div><div class="header-fragment-outer wireframe-header-fragment-outer group-navigation"><div class="header-fragment-inner wireframe-header-fragment-inner group-navigation"><div class="header-fragment group-navigation" id="header-fragment-247403541">

<script src="/Utility/HeaderFragments/Core/GroupNavigation.js?Version=5.6.583.17018" type="text/javascript"></script>
    
<div id="ctl00_header_fragment_247403541__9be11d_ctl00_ctl00_ParentGroupListContainer" class="parent-container" style="width: 100%">
<div class="parent-sub-container">
	
            <div class="navigation-list-header"></div>
            <ul class="navigation-list parent">
            <li class="navigation-item" style="display: none;">
                <a href="/">MSDN Blogs</a>
            </li>
        
            <li class="navigation-item entry" style="display: none;">
				
						<a class="internal-link view-group" href="/Microsoft_Blog_Images/"><span></span>Microsoft Blog Images</a>
					
            </li>
        
			
            <li class="navigation-item last">
				<a id="MoreLink" style="display:none;" onmouseover="Core_GroupNavigation_MoreShowNav(ctl00_header_fragment_247403541, true, this)" onmouseout="Core_GroupNavigation_MoreMouseOutPopup(ctl00_header_fragment_247403541, true, this)" href="#">More ...</a>
            </li>
            </ul>
            <div class="navigation-list-footer"></div>
        
</div>
</div>
<div id="ctl00_header_fragment_247403541__9be11d_ctl00_ctl00_GroupNavigationPopup" style="position:absolute;visibility:hidden;left:-5000px;"></div>
<div id="ctl00_header_fragment_247403541__9be11d_ctl00_ctl00_ParentMore" style="display: none;">
    <div class="content-list-header"></div>
    <ul id="ParentMoreListheader-fragment-247403541" class="content-list">
    </ul>
    <div class="content-list-footer"></div>
</div>
<div id="ctl00_header_fragment_247403541__9be11d_ctl00_ctl00_ChildMore" style="display: none;">
    <div class="content-list-header"></div>
    <ul id="ChildMoreListheader-fragment-247403541" class="content-list">
    </ul>
    <div class="content-list-footer"></div>
</div>
	
<script type="text/javascript">
    // <![CDATA[
    
    var Core_GroupNavigation_AjaxEndpoint = '/Utility/HeaderFragments/Core/GroupNavigationAjax.asmx';
        
    var ctl00_header_fragment_247403541={"wrapperId":"header-fragment-247403541","variableName":"ctl00_header_fragment_247403541","parameter":{"currentGroupId":0,"popupMenuId":"ctl00_header_fragment_247403541__9be11d_ctl00_ctl00_GroupNavigationPopup","popupParentMoreId":"ctl00_header_fragment_247403541__9be11d_ctl00_ctl00_ParentMore","popupChildMoreId":"ctl00_header_fragment_247403541__9be11d_ctl00_ctl00_ChildMore","popupWrapperID":"popup-ctl00_header_fragment_247403541__9be11d_ctl00_ctl00_GroupNavigationPopup","mouseInPopup":false,"popupPopulated":false,"errorHtml":"<div class=\"message error\">An error occured while attempting to load groups.</div>","loadingHtml":"<div class=\"message loading\">Loading...</div>","groupNavigationContentWrapperHtmlBlock":"<div id=\"popup-ctl00_header_fragment_247403541__9be11d_ctl00_ctl00_GroupNavigationPopup\">{GroupNavigationContent}</div>","groupNavigationListHtmlBlock":"<div class=\"multiple-column-list-header\"></div>\n<div class=\"multiple-column-list columns-{ColumnsCount}\">{Columns}</div>\n<div class=\"multiple-column-list-footer\"></div>","columnWrapperHtmlBlock":"<div class=\"multiple-column-item column-{ColumnId}\">{T1GroupsData}</div>","t1GroupHtmlBlock":"\r\n\t\t<div class=\"content-list-header\"></div>\r\n\t\t<div class=\"content-list-name{NameClass}\">{Name}</div>\r\n\t\t<ul class=\"content-list\">\r\n\t\t\t{Groups}\r\n\t\t</ul>\r\n\t\t<div class=\"content-list-footer\"></div>\r\n\t","t2GroupHtmlBlock":"<li class=\"content-item{ItemClass}\">{Item}</li>","viewAllHtmlBlock":"<a href=\"{Url}\" class=\"internal-link view-all\">{Text}</a>","linkHtmlBlock":"<a href=\"{Url}\" class=\"{MoreClass}\">{Name}</a>","searchResultItemHtmlBlock":"<li class=\"content-item\"><a href=\"{Url}\">{Name}</a></li>","viewMoreText":"and {MoreText} more..."}};

	$(document).ready(function() {
		Core_GroupNavigation_SetMenuItems("#ctl00_header_fragment_247403541__9be11d_ctl00_ctl00_ParentGroupListContainer", true, "ParentMoreListheader-fragment-247403541");
		Core_GroupNavigation_SetMenuItems("#ctl00_header_fragment_247403541__9be11d_ctl00_ctl00_ChildGroupListContainer", false, "ChildMoreListheader-fragment-247403541");
	});

	$(window).resize(function() {
		Core_GroupNavigation_SetMenuItems("#ctl00_header_fragment_247403541__9be11d_ctl00_ctl00_ParentGroupListContainer", true, "ParentMoreListheader-fragment-247403541");
		Core_GroupNavigation_SetMenuItems("#ctl00_header_fragment_247403541__9be11d_ctl00_ctl00_ChildGroupListContainer", false, "ChildMoreListheader-fragment-247403541");
	});
    // ]]>
</script></div></div></div></div>
<div class="header-fragments-footer"></div>
			
    <div class="content-fragment-page post" id="ctl00_content_ctl00_page"><div class="layout">
<div class="layout-header"></div>
<div class="layout-content header-top-content-left-sidebar-right" id="ctl00_content_ctl00_layout">
<div class="layout-region header" id="ctl00_content_ctl00_header">
<div class="layout-region-inner header"><div class="content-fragment blog-title full-border" id="fragment-16365">
<div class="content-fragment-inner wireframe-content-fragment-inner"><div class="content-fragment-top wireframe-content-fragment-top"><div class="r1 wireframe-r1"></div><div class="r2 wireframe-r2"></div><div class="r3 wireframe-r3"></div><div class="r4 wireframe-r4"></div></div><div class="content-fragment-content">
<h1 class="title">
	    
			        
			    
	                Challenges of Debugging Optimized x64 Code
			    
	</h1></div>
<div class="content-fragment-footer"></div>
<div class="content-fragment-bottom wireframe-content-fragment-bottom"><div class="r1 wireframe-r1"></div><div class="r2 wireframe-r2"></div><div class="r3 wireframe-r3"></div><div class="r4 wireframe-r4"></div></div></div></div>
<div id="fragment-16366"></div>
</div>
</div>
<div class="layout-region right-sidebar" id="ctl00_content_ctl00_right-sidebar">
<div class="layout-region-inner right-sidebar"><div class="content-fragment blog-links no-wrapper-with-spacing with-header" id="fragment-16367">
<div class="content-fragment-inner wireframe-content-fragment-inner"><div class="content-fragment-top wireframe-content-fragment-top"><div class="r1 wireframe-r1"></div><div class="r2 wireframe-r2"></div><div class="r3 wireframe-r3"></div><div class="r4 wireframe-r4"></div></div><div class="content-fragment-header"><div>Common Tasks</div></div>
<div class="content-fragment-content">

		<div class="navigation-list-header"></div>
		<ul class="navigation-list">
	<li class="navigation-item"><a class="internal-link view-application" href="/b/ntdebugging/"><span></span>Blog Home</a></li><li class="navigation-item"><a class="internal-link view-user-profile" href="/b/ntdebugging/about.aspx"><span></span>About</a></li><li id=""RssComments""" class="navigation-item"><a class="internal-link rss" href="/b/ntdebugging/rsscomments.aspx"><span></span>RSS for comments</a></li><li class="navigation-item"><a class="internal-link rss" href="/b/ntdebugging/rss.aspx"><span></span>RSS for posts</a></li>
		</ul>
		<div class="navigation-list-footer"></div>
	</div>
<div class="content-fragment-footer"></div>
<div class="content-fragment-bottom wireframe-content-fragment-bottom"><div class="r1 wireframe-r1"></div><div class="r2 wireframe-r2"></div><div class="r3 wireframe-r3"></div><div class="r4 wireframe-r4"></div></div></div></div>
<div class="content-fragment search-form no-wrapper-with-spacing with-header" id="fragment-16368">
<div class="content-fragment-inner wireframe-content-fragment-inner"><div class="content-fragment-top wireframe-content-fragment-top"><div class="r1 wireframe-r1"></div><div class="r2 wireframe-r2"></div><div class="r3 wireframe-r3"></div><div class="r4 wireframe-r4"></div></div><div class="content-fragment-header"><div>Search</div></div>
<div class="content-fragment-content">



        <div class="field-list-header"></div>
        <fieldset class="field-list">
            <ul class="field-list">
                <li class="field-item search">
                    <div>
                         <span class="field-item-input"><input name="ctl00$content$ctl00$w_16368$_9be11d$ctl00$ctl01$ctl01$Keywords" type="text" maxlength="64" size="45" id="ctl00_content_ctl00_w_16368__9be11d_ctl00_ctl01_ctl01_Keywords" onfocus="if(this.defaultValue==this.value) this.value='';" onblur="if(this.value=='') this.value=this.defaultValue;" /></span>
                    </div>
                    <span id="ctl00_content_ctl00_w_16368__9be11d_ctl00_ctl01_ctl01_Validator" style="color:Red;display:none;"><span class="field-item-validation">*</span></span>


                    <a href="#" onclick="ToggleAdvancedSearch(ctl00_content_ctl00_w_16368, this)" id="ctl00_content_ctl00_w_16368_AdvancedOptions" class="internal-link advanced-search"><span></span>Advanced search options...</a>
                </li>
                <li class="field-item search-type">
                    <label for="ctl00_content_ctl00_w_16368__9be11d_ctl00_ctl01_ctl01_ContentTypes" class="field-item-header">Search In:</label>
                    <span class="field-item-input">
                        <select name="ctl00$content$ctl00$w_16368$_9be11d$ctl00$ctl01$ctl01$ContentTypes" id="ctl00_content_ctl00_w_16368__9be11d_ctl00_ctl01_ctl01_ContentTypes">
	<option value="">Everything</option>
	<option value="blog">Blogs</option>
	<option value="forum">Forums</option>
	<option value="user">People</option>
	<option value="group">Groups</option>
	<option value="fileapp,forumapp,blogapp,wikiapp">Places</option>
	<option value="page">Pages</option>

</select>
                    </span>
                </li>
                <li class="field-item date-range">
                    <label for="ctl00_content_ctl00_w_16368__9be11d_ctl00_ctl01_ctl01_DatingBackTo" class="field-item-header">Date range:</label>
                    <span class="field-item-input"><select name="ctl00$content$ctl00$w_16368$_9be11d$ctl00$ctl01$ctl01$DatingBackTo" id="ctl00_content_ctl00_w_16368__9be11d_ctl00_ctl01_ctl01_DatingBackTo">
	<option value="-1">All Time</option>
	<option value="-365">Last Year</option>
	<option value="-185">Last 6 Months</option>
	<option value="-95">Last 3 Months</option>
	<option value="-35">Last Month</option>
	<option value="-7">Last Week</option>
	<option value="-2">Last Two Days</option>

</select></span>
                </li>
                
                <li class="field-item searchbutton">
                    <span class="field-item-input"><a id="ctl00_content_ctl00_w_16368__9be11d_ctl00_ctl01_ctl01_SearchButton" href="javascript:WebForm_DoPostBackWithOptions(new WebForm_PostBackOptions(&quot;ctl00$content$ctl00$w_16368$_9be11d$ctl00$ctl01$ctl01$SearchButton&quot;, &quot;&quot;, true, &quot;&quot;, &quot;&quot;, false, true))">Search</a></span>
                </li>
            </ul>
        </fieldset>
        <div class="field-list-footer">
            <span style="display:inline-block"><input type="radio" name="SearchTypeRadio" value="ThisBlog" id="ThisBlog" checked /><label for="ThisBlog" id="ThisBlogText">Search this blog</label></span>
            <span style="display:inline-block"><input type="radio" name="SearchTypeRadio" value="AllBlogs" id="AllBlogs" /><label for="AllBlogs" id="AllBlogsText">Search all blogs</label></span>
        </div>

    


<script type="text/javascript">

// Hide the radio buttons and text if we aren't on a blog
$(document).ready(function() {
            
    // try to get the blog id, if we fail, then we aren't on a blog and just use the regular search approach       
    var sectionID = 7700;

    if (sectionID == -1)
    {
        var tbObj = document.getElementById("ThisBlog");
        var tbObjText = document.getElementById("ThisBlogText");
        var abObj = document.getElementById("AllBlogs");
        var abObjText = document.getElementById("AllBlogsText");
        
        if (tbObj != 'undefined' && abObj != 'undefined' && abObjText != 'undefined' && tbObjText != 'undefined')
        {
            tbObj.style.display = 'none';
            tbObjText.style.display = 'none';
            abObj.style.display = 'none';
            abObjText.style.display = 'none';
        }
    }
}
);

// Setup on keypress event for the search box     
var ctl00_content_ctl00_w_16368={"wrapperId":"fragment-16368","variableName":"ctl00_content_ctl00_w_16368","parameter":{"keywords":"ctl00_content_ctl00_w_16368__9be11d_ctl00_ctl01_ctl01_Keywords","search":"ctl00_content_ctl00_w_16368__9be11d_ctl00_ctl01_ctl01_SearchButton"}};
    
    $("#" + ctl00_content_ctl00_w_16368.parameter.keywords).bind("keypress", function(event) {
        if (event.keyCode == 13) {
            event.preventDefault();
            var tb = $(event.target);
            tb.blur();   
            
            // try to get the blog id, if we fail, then we aren't on a blog and just use the regular search approach       
            var sectionID = 7700;
            if (sectionID != -1 && document.getElementById("ThisBlog").checked==true)
            {
                window.location = "/search/SearchResults.aspx?q=" + encodeURIComponent($("#" + ctl00_content_ctl00_w_16368.parameter.keywords).attr("value")) + "&sections=" + sectionID;
            }
            else
            {
                window.location = $("#" + ctl00_content_ctl00_w_16368.parameter.search).attr("href");
            }
        }
    });
    
    function ToggleAdvancedSearch(context, e)
    {
        var wrapper = $("#" + context.wrapperId);
        var advancedSearchLink = $("#" + context.variableName + "_AdvancedOptions", wrapper);
        if (advancedSearchLink.text() == 'Advanced search options...')
        {
            advancedSearchLink.text('Hide advanced options...');
            $("ul.field-list", wrapper).addClass('advanced-search advanced-search__field-list');
        }
        else
        {
            advancedSearchLink.text('Advanced search options...');
            $("ul.field-list", wrapper).removeClass('advanced-search advanced-search__field-list');
        }
    }
</script></div>
<div class="content-fragment-footer"></div>
<div class="content-fragment-bottom wireframe-content-fragment-bottom"><div class="r1 wireframe-r1"></div><div class="r2 wireframe-r2"></div><div class="r3 wireframe-r3"></div><div class="r4 wireframe-r4"></div></div></div></div>
<div class="content-fragment blog-post-list no-wrapper-with-spacing with-header" id="fragment-16369">
<div class="content-fragment-inner wireframe-content-fragment-inner"><div class="content-fragment-top wireframe-content-fragment-top"><div class="r1 wireframe-r1"></div><div class="r2 wireframe-r2"></div><div class="r3 wireframe-r3"></div><div class="r4 wireframe-r4"></div></div><div class="content-fragment-header"><div>Recent Posts</div></div>
<div class="content-fragment-content">

	    <div class="content-list-header simple"></div>
        <ul class="content-list simple">
	
		<li class="content-item">
			<div class="abbreviated-post-header"></div>
			<div class="abbreviated-post">
				<h4 class="post-name"><a class="internal-link view-post" href="/b/ntdebugging/archive/2011/08/05/for-testing-purposes-only-and-other-desktop-watermarks.aspx"><span></span>For testing purposes only, and other desktop watermarks</a></h4>
				
            <div class="post-date">
		        <span class="label">Posted</span>
		        <span class="value">10 days ago</span>
	        </div>
                <div class="post-author">
                    <span class="fiji-post-author-by">by</span>
                    <span class="avatar"><a href="/ntdebug/ProfileUrlRedirect.ashx"><img src="http://i1.social.microsoft.com/profile/u/avatar.jpg?displayname=ntdebug&amp;size=large" alt="" style="border-width:0px;max-height:32px;max-width:32px;" /></a></span>
                    
                    <span class="user-name"><a class="internal-link view-user-profile" href="/ntdebug/ProfileUrlRedirect.ashx"><span></span>ntdebug</a></span>
                    
                </div>
	            <div class="post-attributes">
		                <div class="attribute-list-header"></div>
                        <ul class="attribute-list">
                            <span class="attribute-value">2</span>
                            <span class="attribute-name">Comments</span>
                        </ul>
                        <div class="attribute-list-footer"></div>
                    </div>
			</div>
			<div class="abbreviated-post-footer"></div>
		</li>
	
		<li class="content-item">
			<div class="abbreviated-post-header"></div>
			<div class="abbreviated-post">
				<h4 class="post-name"><a class="internal-link view-post" href="/b/ntdebugging/archive/2011/07/21/lun-discovery-in-a-nutshell.aspx"><span></span>LUN Discovery in a Nutshell</a></h4>
				
            <div class="post-date">
		        <span class="label">Posted</span>
		        <span class="value">25 days ago</span>
	        </div>
                <div class="post-author">
                    <span class="fiji-post-author-by">by</span>
                    <span class="avatar"><a href="/ntdebug/ProfileUrlRedirect.ashx"><img src="http://i1.social.microsoft.com/profile/u/avatar.jpg?displayname=ntdebug&amp;size=large" alt="" style="border-width:0px;max-height:32px;max-width:32px;" /></a></span>
                    
                    <span class="user-name"><a class="internal-link view-user-profile" href="/ntdebug/ProfileUrlRedirect.ashx"><span></span>ntdebug</a></span>
                    
                </div>
	            <div class="post-attributes">
		                <div class="attribute-list-header"></div>
                        <ul class="attribute-list">
                            <span class="attribute-value">1</span>
                            <span class="attribute-name">Comments</span>
                        </ul>
                        <div class="attribute-list-footer"></div>
                    </div>
			</div>
			<div class="abbreviated-post-footer"></div>
		</li>
	
		<li class="content-item">
			<div class="abbreviated-post-header"></div>
			<div class="abbreviated-post">
				<h4 class="post-name"><a class="internal-link view-post" href="/b/ntdebugging/archive/2011/07/20/updated-archive-of-the-debug-ninja-s-twitter-debug-tips.aspx"><span></span>Updated Archive of the Debug Ninja’s Twitter Debug Tips</a></h4>
				
            <div class="post-date">
		        <span class="label">Posted</span>
		        <span class="value">26 days ago</span>
	        </div>
                <div class="post-author">
                    <span class="fiji-post-author-by">by</span>
                    <span class="avatar"><a href="/ntdebug/ProfileUrlRedirect.ashx"><img src="http://i1.social.microsoft.com/profile/u/avatar.jpg?displayname=ntdebug&amp;size=large" alt="" style="border-width:0px;max-height:32px;max-width:32px;" /></a></span>
                    
                    <span class="user-name"><a class="internal-link view-user-profile" href="/ntdebug/ProfileUrlRedirect.ashx"><span></span>ntdebug</a></span>
                    
                </div>
	            <div class="post-attributes">
		                <div class="attribute-list-header"></div>
                        <ul class="attribute-list">
                            <span class="attribute-value">1</span>
                            <span class="attribute-name">Comments</span>
                        </ul>
                        <div class="attribute-list-footer"></div>
                    </div>
			</div>
			<div class="abbreviated-post-footer"></div>
		</li>
	
		<li class="content-item">
			<div class="abbreviated-post-header"></div>
			<div class="abbreviated-post">
				<h4 class="post-name"><a class="internal-link view-post" href="/b/ntdebugging/archive/2011/06/29/a-classic-case-of-whodunit.aspx"><span></span>A Classic Case of Whodunit</a></h4>
				
            <div class="post-date">
		        <span class="label">Posted</span>
		        <span class="value">1 month ago</span>
	        </div>
                <div class="post-author">
                    <span class="fiji-post-author-by">by</span>
                    <span class="avatar"><a href="/ntdebug/ProfileUrlRedirect.ashx"><img src="http://i1.social.microsoft.com/profile/u/avatar.jpg?displayname=ntdebug&amp;size=large" alt="" style="border-width:0px;max-height:32px;max-width:32px;" /></a></span>
                    
                    <span class="user-name"><a class="internal-link view-user-profile" href="/ntdebug/ProfileUrlRedirect.ashx"><span></span>ntdebug</a></span>
                    
                </div>
	            <div class="post-attributes">
		                <div class="attribute-list-header"></div>
                        <ul class="attribute-list">
                            <span class="attribute-value">3</span>
                            <span class="attribute-name">Comments</span>
                        </ul>
                        <div class="attribute-list-footer"></div>
                    </div>
			</div>
			<div class="abbreviated-post-footer"></div>
		</li>
	
		<li class="content-item">
			<div class="abbreviated-post-header"></div>
			<div class="abbreviated-post">
				<h4 class="post-name"><a class="internal-link view-post" href="/b/ntdebugging/archive/2011/06/28/ntfs-and-4k-disks.aspx"><span></span>NTFS And 4K Disks</a></h4>
				
            <div class="post-date">
		        <span class="label">Posted</span>
		        <span class="value">1 month ago</span>
	        </div>
                <div class="post-author">
                    <span class="fiji-post-author-by">by</span>
                    <span class="avatar"><a href="/ntdebug/ProfileUrlRedirect.ashx"><img src="http://i1.social.microsoft.com/profile/u/avatar.jpg?displayname=ntdebug&amp;size=large" alt="" style="border-width:0px;max-height:32px;max-width:32px;" /></a></span>
                    
                    <span class="user-name"><a class="internal-link view-user-profile" href="/ntdebug/ProfileUrlRedirect.ashx"><span></span>ntdebug</a></span>
                    
                </div>
	            <div class="post-attributes">
		                <div class="attribute-list-header"></div>
                        <ul class="attribute-list">
                            <span class="attribute-value">1</span>
                            <span class="attribute-name">Comments</span>
                        </ul>
                        <div class="attribute-list-footer"></div>
                    </div>
			</div>
			<div class="abbreviated-post-footer"></div>
		</li>
	
		</ul>
		<div class="content-list-footer simple"></div>
	</div>
<div class="content-fragment-footer"></div>
<div class="content-fragment-bottom wireframe-content-fragment-bottom"><div class="r1 wireframe-r1"></div><div class="r2 wireframe-r2"></div><div class="r3 wireframe-r3"></div><div class="r4 wireframe-r4"></div></div></div></div>
<div class="content-fragment blog-archive-list no-wrapper-with-spacing with-header" id="fragment-16370">
<div class="content-fragment-inner wireframe-content-fragment-inner"><div class="content-fragment-top wireframe-content-fragment-top"><div class="r1 wireframe-r1"></div><div class="r2 wireframe-r2"></div><div class="r3 wireframe-r3"></div><div class="r4 wireframe-r4"></div></div><div class="content-fragment-header"><div>Archives</div></div>
<div class="content-fragment-content">

		<div class="content-list-header"></div>
		<div class="content-list-name">Archives</div>
		<ul class="content-list">
	
		<li class="content-item"><a class="internal-link view-post-archive-list" href="/b/ntdebugging/archive/2011/08.aspx">August 2011</a> (1)</li>
	
		<li class="content-item"><a class="internal-link view-post-archive-list" href="/b/ntdebugging/archive/2011/07.aspx">July 2011</a> (2)</li>
	
		<li class="content-item"><a class="internal-link view-post-archive-list" href="/b/ntdebugging/archive/2011/06.aspx">June 2011</a> (2)</li>
	
		<li class="content-item"><a class="internal-link view-post-archive-list" href="/b/ntdebugging/archive/2011/05.aspx">May 2011</a> (2)</li>
	
		<li class="content-item"><a class="internal-link view-post-archive-list" href="/b/ntdebugging/archive/2011/04.aspx">April 2011</a> (2)</li>
	
		<li class="content-item"><a class="internal-link view-post-archive-list" href="/b/ntdebugging/archive/2011/03.aspx">March 2011</a> (2)</li>
	
		<li class="content-item"><a class="internal-link view-post-archive-list" href="/b/ntdebugging/archive/2011/02.aspx">February 2011</a> (1)</li>
	
		<li class="content-item"><a class="internal-link view-post-archive-list" href="/b/ntdebugging/archive/2011/01.aspx">January 2011</a> (2)</li>
	
		<li class="content-item"><a class="internal-link view-post-archive-list" href="/b/ntdebugging/archive/2010/11.aspx">November 2010</a> (1)</li>
	
		<li class="content-item"><a class="internal-link view-post-archive-list" href="/b/ntdebugging/archive/2010/09.aspx">September 2010</a> (1)</li>
	
		<li class="content-item"><a class="internal-link view-post-archive-list" href="/b/ntdebugging/archive/2010/08.aspx">August 2010</a> (2)</li>
	
		<li class="content-item"><a class="internal-link view-post-archive-list" href="/b/ntdebugging/archive/2010/07.aspx">July 2010</a> (1)</li>
	
		<li class="content-item"><a class="internal-link view-post-archive-list" href="/b/ntdebugging/archive/2010/06.aspx">June 2010</a> (3)</li>
	
		<li class="content-item"><a class="internal-link view-post-archive-list" href="/b/ntdebugging/archive/2010/05.aspx">May 2010</a> (2)</li>
	
		<li class="content-item"><a class="internal-link view-post-archive-list" href="/b/ntdebugging/archive/2010/04.aspx">April 2010</a> (7)</li>
	
		<li class="content-item"><a class="internal-link view-post-archive-list" href="/b/ntdebugging/archive/2010/03.aspx">March 2010</a> (3)</li>
	
		<li class="content-item"><a class="internal-link view-post-archive-list" href="/b/ntdebugging/archive/2010/02.aspx">February 2010</a> (2)</li>
	
		<li class="content-item"><a class="internal-link view-post-archive-list" href="/b/ntdebugging/archive/2010/01.aspx">January 2010</a> (2)</li>
	
		<li class="content-item"><a class="internal-link view-post-archive-list" href="/b/ntdebugging/archive/2009/12.aspx">December 2009</a> (3)</li>
	
		<li class="content-item"><a class="internal-link view-post-archive-list" href="/b/ntdebugging/archive/2009/11.aspx">November 2009</a> (3)</li>
	
		<li class="content-item"><a class="internal-link view-post-archive-list" href="/b/ntdebugging/archive/2009/10.aspx">October 2009</a> (1)</li>
	
		<li class="content-item"><a class="internal-link view-post-archive-list" href="/b/ntdebugging/archive/2009/09.aspx">September 2009</a> (3)</li>
	
		<li class="content-item"><a class="internal-link view-post-archive-list" href="/b/ntdebugging/archive/2009/08.aspx">August 2009</a> (7)</li>
	
		<li class="content-item"><a class="internal-link view-post-archive-list" href="/b/ntdebugging/archive/2009/07.aspx">July 2009</a> (4)</li>
	
		<li class="content-item"><a class="internal-link view-post-archive-list" href="/b/ntdebugging/archive/2009/06.aspx">June 2009</a> (2)</li>
	
		<li class="content-item"><a class="internal-link view-post-archive-list" href="/b/ntdebugging/archive/2009/05.aspx">May 2009</a> (6)</li>
	
		<li class="content-item"><a class="internal-link view-post-archive-list" href="/b/ntdebugging/archive/2009/04.aspx">April 2009</a> (4)</li>
	
		<li class="content-item"><a class="internal-link view-post-archive-list" href="/b/ntdebugging/archive/2009/03.aspx">March 2009</a> (13)</li>
	
		<li class="content-item"><a class="internal-link view-post-archive-list" href="/b/ntdebugging/archive/2009/02.aspx">February 2009</a> (6)</li>
	
		<li class="content-item"><a class="internal-link view-post-archive-list" href="/b/ntdebugging/archive/2009/01.aspx">January 2009</a> (1)</li>
	
		<li class="content-item"><a class="internal-link view-post-archive-list" href="/b/ntdebugging/archive/2008/12.aspx">December 2008</a> (1)</li>
	
		<li class="content-item"><a class="internal-link view-post-archive-list" href="/b/ntdebugging/archive/2008/11.aspx">November 2008</a> (3)</li>
	
		<li class="content-item"><a class="internal-link view-post-archive-list" href="/b/ntdebugging/archive/2008/10.aspx">October 2008</a> (5)</li>
	
		<li class="content-item"><a class="internal-link view-post-archive-list" href="/b/ntdebugging/archive/2008/09.aspx">September 2008</a> (4)</li>
	
		<li class="content-item"><a class="internal-link view-post-archive-list" href="/b/ntdebugging/archive/2008/08.aspx">August 2008</a> (6)</li>
	
		<li class="content-item"><a class="internal-link view-post-archive-list" href="/b/ntdebugging/archive/2008/07.aspx">July 2008</a> (7)</li>
	
		<li class="content-item"><a class="internal-link view-post-archive-list" href="/b/ntdebugging/archive/2008/06.aspx">June 2008</a> (6)</li>
	
		<li class="content-item"><a class="internal-link view-post-archive-list" href="/b/ntdebugging/archive/2008/05.aspx">May 2008</a> (11)</li>
	
		<li class="content-item"><a class="internal-link view-post-archive-list" href="/b/ntdebugging/archive/2008/04.aspx">April 2008</a> (14)</li>
	
		<li class="content-item"><a class="internal-link view-post-archive-list" href="/b/ntdebugging/archive/2008/03.aspx">March 2008</a> (6)</li>
	
		<li class="content-item"><a class="internal-link view-post-archive-list" href="/b/ntdebugging/archive/2008/02.aspx">February 2008</a> (1)</li>
	
		<li class="content-item"><a class="internal-link view-post-archive-list" href="/b/ntdebugging/archive/2007/12.aspx">December 2007</a> (2)</li>
	
		<li class="content-item"><a class="internal-link view-post-archive-list" href="/b/ntdebugging/archive/2007/11.aspx">November 2007</a> (2)</li>
	
		<li class="content-item"><a class="internal-link view-post-archive-list" href="/b/ntdebugging/archive/2007/10.aspx">October 2007</a> (2)</li>
	
		<li class="content-item"><a class="internal-link view-post-archive-list" href="/b/ntdebugging/archive/2007/09.aspx">September 2007</a> (6)</li>
	
		<li class="content-item"><a class="internal-link view-post-archive-list" href="/b/ntdebugging/archive/2007/07.aspx">July 2007</a> (3)</li>
	
		<li class="content-item"><a class="internal-link view-post-archive-list" href="/b/ntdebugging/archive/2007/06.aspx">June 2007</a> (10)</li>
	
		<li class="content-item"><a class="internal-link view-post-archive-list" href="/b/ntdebugging/archive/2007/05.aspx">May 2007</a> (1)</li>
	
		<li class="content-item"><a class="internal-link view-post-archive-list" href="/b/ntdebugging/archive/2007/01.aspx">January 2007</a> (2)</li>
	
		<li class="content-item"><a class="internal-link view-post-archive-list" href="/b/ntdebugging/archive/2006/12.aspx">December 2006</a> (2)</li>
	
		</ul>
		<div class="content-list-footer"></div>
	
</div>
<div class="content-fragment-footer"></div>
<div class="content-fragment-bottom wireframe-content-fragment-bottom"><div class="r1 wireframe-r1"></div><div class="r2 wireframe-r2"></div><div class="r3 wireframe-r3"></div><div class="r4 wireframe-r4"></div></div></div></div>
<div class="content-fragment link-list no-wrapper-with-spacing" id="fragment-16371">
<div class="content-fragment-inner wireframe-content-fragment-inner"><div class="content-fragment-top wireframe-content-fragment-top"><div class="r1 wireframe-r1"></div><div class="r2 wireframe-r2"></div><div class="r3 wireframe-r3"></div><div class="r4 wireframe-r4"></div></div><div class="content-fragment-content">

        <div class="content-list-header"></div>
        <div class="content-list-name">History</div>
        <ul class="content-list">
            
                    <li class="content-item">
                        <div class="full-post-header"></div>
                        <div class="full-post">
                            <h3 class="post-name"><a class="external-link view-post" href="http://blogs.msdn.com/ntdebugging/pages/nt-debugging-blog-history.aspx"><span></span>List all articles</a></h3>
                            <div class="post-content user-defined-markup">a list of all ntdebugging articles.</div>
                        </div>
                        <div class="full-post-footer"></div>
                    </li>
                
        </ul>
        <div class="content-list-footer"></div>
    
        <div class="content-list-header"></div>
        <div class="content-list-name">Associated team blogs</div>
        <ul class="content-list">
            
                    <li class="content-item">
                        <div class="full-post-header"></div>
                        <div class="full-post">
                            <h3 class="post-name"><a class="external-link view-post" href="http://blogs.technet.com/askcore"><span></span>Core </a></h3>
                            <div class="post-content user-defined-markup"></div>
                        </div>
                        <div class="full-post-footer"></div>
                    </li>
                
                    <li class="content-item">
                        <div class="full-post-header"></div>
                        <div class="full-post">
                            <h3 class="post-name"><a class="external-link view-post" href="http://blogs.technet.com/askds"><span></span>Directory Services </a></h3>
                            <div class="post-content user-defined-markup"></div>
                        </div>
                        <div class="full-post-footer"></div>
                    </li>
                
                    <li class="content-item">
                        <div class="full-post-header"></div>
                        <div class="full-post">
                            <h3 class="post-name"><a class="external-link view-post" href="http://blogs.technet.com/latam"><span></span>LATAM [Portugese & Spanish] </a></h3>
                            <div class="post-content user-defined-markup"></div>
                        </div>
                        <div class="full-post-footer"></div>
                    </li>
                
                    <li class="content-item">
                        <div class="full-post-header"></div>
                        <div class="full-post">
                            <h3 class="post-name"><a class="external-link view-post" href="http://blogs.technet.com/smsandmom"><span></span>Manageability</a></h3>
                            <div class="post-content user-defined-markup"></div>
                        </div>
                        <div class="full-post-footer"></div>
                    </li>
                
                    <li class="content-item">
                        <div class="full-post-header"></div>
                        <div class="full-post">
                            <h3 class="post-name"><a class="external-link view-post" href="http://blogs.technet.com/networking"><span></span>Networking</a></h3>
                            <div class="post-content user-defined-markup"></div>
                        </div>
                        <div class="full-post-footer"></div>
                    </li>
                
                    <li class="content-item">
                        <div class="full-post-header"></div>
                        <div class="full-post">
                            <h3 class="post-name"><a class="external-link view-post" href="http://blogs.technet.com/askperf"><span></span>Performance</a></h3>
                            <div class="post-content user-defined-markup"></div>
                        </div>
                        <div class="full-post-footer"></div>
                    </li>
                
                    <li class="content-item">
                        <div class="full-post-header"></div>
                        <div class="full-post">
                            <h3 class="post-name"><a class="external-link view-post" href="http://blogs.technet.com/sbs"><span></span>Small Business Server </a></h3>
                            <div class="post-content user-defined-markup"></div>
                        </div>
                        <div class="full-post-footer"></div>
                    </li>
                
                    <li class="content-item">
                        <div class="full-post-header"></div>
                        <div class="full-post">
                            <h3 class="post-name"><a class="external-link view-post" href="http://blogs.technet.com/softgrid"><span></span>SoftGrid</a></h3>
                            <div class="post-content user-defined-markup"></div>
                        </div>
                        <div class="full-post-footer"></div>
                    </li>
                
                    <li class="content-item">
                        <div class="full-post-header"></div>
                        <div class="full-post">
                            <h3 class="post-name"><a class="external-link view-post" href="http://blogs.technet.com/hot"><span></span>Microsoft Hotfix and Hot Issue Center!</a></h3>
                            <div class="post-content user-defined-markup"></div>
                        </div>
                        <div class="full-post-footer"></div>
                    </li>
                
        </ul>
        <div class="content-list-footer"></div>
    </div>
<div class="content-fragment-footer"></div>
<div class="content-fragment-bottom wireframe-content-fragment-bottom"><div class="r1 wireframe-r1"></div><div class="r2 wireframe-r2"></div><div class="r3 wireframe-r3"></div><div class="r4 wireframe-r4"></div></div></div></div>
</div>
</div>
<div class="layout-region content" id="ctl00_content_ctl00_content">
<div class="layout-region-inner content"><div class="content-fragment blog-bread-crumbs no-wrapper-with-spacing" id="fragment-16372">
<div class="content-fragment-inner wireframe-content-fragment-inner"><div class="content-fragment-top wireframe-content-fragment-top"><div class="r1 wireframe-r1"></div><div class="r2 wireframe-r2"></div><div class="r3 wireframe-r3"></div><div class="r4 wireframe-r4"></div></div><div class="content-fragment-content">


<div class="breadcrumb-list-header"></div>
<div class="breadcrumb-list">
	<span class="breadcrumb-item"><a class="internal-link view-home" href="/">MSDN Blogs</a></span>
  
	

	
			<span class="separator"> > </span>
			<span class="breadcrumb-item">
		<a href="/b/ntdebugging/">Ntdebugging Blog</a>
			</span>
		
	
	
			<span class="separator"> > </span>
			<span class="breadcrumb-item">
		<a href="/b/ntdebugging/archive/2009/01/09/challenges-of-debugging-optimized-x64-code.aspx">Challenges of Debugging Optimized x64 Code</a>
			</span>
		

	
</div>
<div class="breadcrumb-list-footer"></div>
</div>
<div class="content-fragment-footer"></div>
<div class="content-fragment-bottom wireframe-content-fragment-bottom"><div class="r1 wireframe-r1"></div><div class="r2 wireframe-r2"></div><div class="r3 wireframe-r3"></div><div class="r4 wireframe-r4"></div></div></div></div>
<div class="content-fragment blog-post no-wrapper-with-spacing" id="fragment-16373">
<div class="content-fragment-inner wireframe-content-fragment-inner"><div class="content-fragment-top wireframe-content-fragment-top"><div class="r1 wireframe-r1"></div><div class="r2 wireframe-r2"></div><div class="r3 wireframe-r3"></div><div class="r4 wireframe-r4"></div></div><div class="content-fragment-content">

<div class="full-post-header"></div>
<div class="full-post">
	<h3 class="post-name">Challenges of Debugging Optimized x64 Code</h3>
	
	        <div class="post-rating">
	            Rate This<br />
	    <span id="ctl00_content_ctl00_w_16373__9be11d_ctl00_ctl01" title="Rated Excellent [5 out of 5]."></span><input type="hidden" value="5" id="ctl00_content_ctl00_w_16373__9be11d_ctl00_ctl01_Value" />
	        </div>
	    
    <div class="post-author">
        <span class="avatar"><a href="/ntdebug/ProfileUrlRedirect.ashx"><img src="http://i1.social.microsoft.com/profile/u/avatar.jpg?displayname=ntdebug&amp;size=large" alt="" style="border-width:0px;max-height:32px;max-width:32px;" /></a></span>
        
        <span class="profile-usercard-hover" data-profile-userid="c8fba3fb-5aef-4da6-bd87-2e58de1cc912">
            <span class="user-name"><a class="internal-link view-user-profile" href="/ntdebug/ProfileUrlRedirect.ashx"><span></span>ntdebug</a></span>
        
            
        </span>
    </div>
    <div class="post-date">
        <span class="value">
            9 Jan 2009 3:50 PM
        </span>
    </div>
    <div class="post-attributes">
        <div class="attribute-list-header"></div>
        <ul class="attribute-list">
             <li class="attribute-item post-reply-count">
                <span class="attribute-name">Comments</span>
                <span class="attribute-value"><a href="#comments" class="internal-link view-replies"><span></span>6</a></span>
             </li>
        </ul>
        <div class="attribute-list-footer"></div>
    </div>
    <div class="post-content user-defined-markup"><P class=MsoNormal style="MARGIN: 0in 0in 10pt"><FONT face=Calibri size=3>If you have not had the luxury of debugging optimized x64 code as of yet, don’t wait much longer and fall behind the times!<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>Due to the x64 fastcall-like calling convention coupled with the abundance of general purpose registers, finding variable values at arbitrary points in a call stack can be very tricky indeed.</FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 10pt"><FONT face=Calibri size=3>In this article, I’d like to detail some of my favorite techniques for debugging optimized x64 code.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>But before digging into these techniques, let’s first have a quick overview of the x64 calling convention.</FONT></P>
<H2 style="MARGIN: 10pt 0in 0pt"><FONT face=Cambria color=#4f81bd size=4>The x64 Calling Convention</FONT></H2>
<P class=MsoNormal style="MARGIN: 0in 0in 10pt"><FONT face=Calibri size=3>Those of you familiar with the fastcall calling convention on x86 platforms will recognize the similarities to the x64 calling convention.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>Whereas you typically have to maintain knowledge of multiple calling conventions on x86 platforms, on x64 platforms there is currently just one.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>(Of course, I’m excluding the case of no calling convention which one can achieve with __declspec(naked) or by coding in straight assembly.)</FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 10pt"><FONT face=Calibri size=3>I won’t go into all of the various nuances of the x64 calling convention, therefore I recommend you check out the following link (</FONT><A href="http://msdn.microsoft.com/en-us/library/ms794533.aspx"><FONT face=Calibri color=#0000ff size=3>http://msdn.microsoft.com/en-us/library/ms794533.aspx</FONT></A><FONT face=Calibri size=3>).<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>But commonly, the first four parameters into a function are passed via the registers rcx, rdx, r8, and r9.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>If the function accepts more than four parameters, those parameters are passed on the stack.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>(Those of you familiar with the x86 fastcall calling convention where the first two parameters are passed in ecx and edx will recognize the similarities).</FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 10pt"><FONT face=Calibri size=3>To help illustrate how the x64 calling convention works, I have created some simple example code.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>Although the code is contrived and far from real-world code, it demonstrates some scenarios that are likely to encounter in the real word.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>The code is shown below.</FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; LINE-HEIGHT: normal; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; COLOR: blue; FONT-FAMILY: 'Courier New'; mso-no-proof: yes">#include</SPAN><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'; mso-no-proof: yes"> <SPAN style="COLOR: #a31515">&lt;stdlib.h&gt;<?xml:namespace prefix = o ns = "urn:schemas-microsoft-com:office:office" /><o:p></o:p></SPAN></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; LINE-HEIGHT: normal; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; COLOR: blue; FONT-FAMILY: 'Courier New'; mso-no-proof: yes">#include</SPAN><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'; mso-no-proof: yes"> <SPAN style="COLOR: #a31515">&lt;stdio.h&gt;<o:p></o:p></SPAN></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; LINE-HEIGHT: normal; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; COLOR: blue; FONT-FAMILY: 'Courier New'; mso-no-proof: yes">#include</SPAN><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'; mso-no-proof: yes"> <SPAN style="COLOR: #a31515">&lt;windows.h&gt;<o:p></o:p></SPAN></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; LINE-HEIGHT: normal; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; COLOR: #a31515; FONT-FAMILY: 'Courier New'; mso-no-proof: yes"><o:p>&nbsp;</o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; LINE-HEIGHT: normal; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; COLOR: blue; FONT-FAMILY: 'Courier New'; mso-no-proof: yes">__declspec</SPAN><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'; mso-no-proof: yes">(<SPAN style="COLOR: blue">noinline</SPAN>)<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; LINE-HEIGHT: normal; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; COLOR: blue; FONT-FAMILY: 'Courier New'; mso-no-proof: yes">void<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; LINE-HEIGHT: normal; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'; mso-no-proof: yes">FunctionWith4Params( <SPAN style="COLOR: blue">int</SPAN> param1, <SPAN style="COLOR: blue">int</SPAN> param2, <SPAN style="COLOR: blue">int</SPAN> param3,<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; LINE-HEIGHT: normal; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'; mso-no-proof: yes"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: blue">int</SPAN> param4 )<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; LINE-HEIGHT: normal; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'; mso-no-proof: yes">{<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; LINE-HEIGHT: normal; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'; mso-no-proof: yes"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>size_t lotsOfLocalVariables1 = rand();<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; LINE-HEIGHT: normal; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'; mso-no-proof: yes"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>size_t lotsOfLocalVariables2 = rand();<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; LINE-HEIGHT: normal; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'; mso-no-proof: yes"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>size_t lotsOfLocalVariables3 = rand();<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; LINE-HEIGHT: normal; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'; mso-no-proof: yes"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>size_t lotsOfLocalVariables4 = rand();<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; LINE-HEIGHT: normal; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'; mso-no-proof: yes"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>size_t lotsOfLocalVariables5 = rand();<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; LINE-HEIGHT: normal; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'; mso-no-proof: yes"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>size_t lotsOfLocalVariables6 = rand();<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; LINE-HEIGHT: normal; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'; mso-no-proof: yes"><o:p>&nbsp;</o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; LINE-HEIGHT: normal; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'; mso-no-proof: yes"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>DebugBreak();<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; LINE-HEIGHT: normal; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'; mso-no-proof: yes"><o:p>&nbsp;</o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; LINE-HEIGHT: normal; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'; mso-no-proof: yes"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>printf( <SPAN style="COLOR: #a31515">"Entering FunctionWith4Params( %X, %X, %X, %X )\n"</SPAN>,<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; LINE-HEIGHT: normal; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'; mso-no-proof: yes"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>param1, param2, param3, param4 );<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; LINE-HEIGHT: normal; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'; mso-no-proof: yes"><o:p>&nbsp;</o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; LINE-HEIGHT: normal; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'; mso-no-proof: yes"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>printf( <SPAN style="COLOR: #a31515">"Local variables: %X, %X, %X, %X, %X, %X \n"</SPAN>,<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; LINE-HEIGHT: normal; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'; mso-no-proof: yes"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>lotsOfLocalVariables1, lotsOfLocalVariables2,<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; LINE-HEIGHT: normal; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'; mso-no-proof: yes"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>lotsOfLocalVariables3, lotsOfLocalVariables4,<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; LINE-HEIGHT: normal; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'; mso-no-proof: yes"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>lotsOfLocalVariables5, lotsOfLocalVariables6 );<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; LINE-HEIGHT: normal; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'; mso-no-proof: yes">}<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; LINE-HEIGHT: normal; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'; mso-no-proof: yes"><o:p>&nbsp;</o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; LINE-HEIGHT: normal; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; COLOR: blue; FONT-FAMILY: 'Courier New'; mso-no-proof: yes">__declspec</SPAN><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'; mso-no-proof: yes">(<SPAN style="COLOR: blue">noinline</SPAN>)<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; LINE-HEIGHT: normal; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; COLOR: blue; FONT-FAMILY: 'Courier New'; mso-no-proof: yes">void<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; LINE-HEIGHT: normal; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'; mso-no-proof: yes">FunctionWith5Params( <SPAN style="COLOR: blue">int</SPAN> param1, <SPAN style="COLOR: blue">int</SPAN> param2, <SPAN style="COLOR: blue">int</SPAN> param3,<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; LINE-HEIGHT: normal; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'; mso-no-proof: yes"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: blue">int</SPAN> param4, <SPAN style="COLOR: blue">int</SPAN> param5 )<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; LINE-HEIGHT: normal; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'; mso-no-proof: yes">{<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; LINE-HEIGHT: normal; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'; mso-no-proof: yes"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>FunctionWith4Params( param5, param4, param3, param2 );<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; LINE-HEIGHT: normal; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'; mso-no-proof: yes"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>FunctionWith4Params( rand(), rand(), rand(), rand() );<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; LINE-HEIGHT: normal; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'; mso-no-proof: yes">}<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; LINE-HEIGHT: normal; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'; mso-no-proof: yes"><o:p>&nbsp;</o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; LINE-HEIGHT: normal; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; COLOR: blue; FONT-FAMILY: 'Courier New'; mso-no-proof: yes">__declspec</SPAN><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'; mso-no-proof: yes">(<SPAN style="COLOR: blue">noinline</SPAN>)<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; LINE-HEIGHT: normal; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; COLOR: blue; FONT-FAMILY: 'Courier New'; mso-no-proof: yes">void<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; LINE-HEIGHT: normal; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'; mso-no-proof: yes">FunctionWith6Params( <SPAN style="COLOR: blue">int</SPAN> param1, <SPAN style="COLOR: blue">int</SPAN> param2, <SPAN style="COLOR: blue">int</SPAN> param3,<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; LINE-HEIGHT: normal; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'; mso-no-proof: yes"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: blue">int</SPAN> param4, <SPAN style="COLOR: blue">int</SPAN> param5, <SPAN style="COLOR: blue">int</SPAN> param6 )<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; LINE-HEIGHT: normal; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'; mso-no-proof: yes">{<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; LINE-HEIGHT: normal; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'; mso-no-proof: yes"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>size_t someLocalVariable1 = rand();<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; LINE-HEIGHT: normal; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'; mso-no-proof: yes"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>size_t someLocalVariable2 = rand();<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; LINE-HEIGHT: normal; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'; mso-no-proof: yes"><o:p>&nbsp;</o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; LINE-HEIGHT: normal; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'; mso-no-proof: yes"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>printf( <SPAN style="COLOR: #a31515">"Entering %s( %X, %X, %X, %X, %X, %X )\n"</SPAN>,<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; LINE-HEIGHT: normal; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'; mso-no-proof: yes"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN><SPAN style="COLOR: #a31515">"FunctionWith6Params"</SPAN>,<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; LINE-HEIGHT: normal; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'; mso-no-proof: yes"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>param1, param2, param3, param4, param5, param6 );<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; LINE-HEIGHT: normal; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'; mso-no-proof: yes"><o:p>&nbsp;</o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; LINE-HEIGHT: normal; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'; mso-no-proof: yes"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>FunctionWith5Params( rand(), rand(), rand(),<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; LINE-HEIGHT: normal; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'; mso-no-proof: yes"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>param1, rand() );<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; LINE-HEIGHT: normal; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'; mso-no-proof: yes"><o:p>&nbsp;</o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; LINE-HEIGHT: normal; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'; mso-no-proof: yes"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>printf( <SPAN style="COLOR: #a31515">"someLocalVariable1 = %X, someLocalVariable2 = %X\n"</SPAN>,<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; LINE-HEIGHT: normal; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'; mso-no-proof: yes"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>someLocalVariable1, someLocalVariable2 );<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; LINE-HEIGHT: normal; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'; mso-no-proof: yes">}<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; LINE-HEIGHT: normal; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'; mso-no-proof: yes"><o:p>&nbsp;</o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; LINE-HEIGHT: normal; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; COLOR: blue; FONT-FAMILY: 'Courier New'; mso-no-proof: yes">int<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; LINE-HEIGHT: normal; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'; mso-no-proof: yes">main( <SPAN style="COLOR: blue">int</SPAN> <SPAN style="COLOR: green">/*argc*/</SPAN>, TCHAR** <SPAN style="COLOR: green">/*argv*/</SPAN> )<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; LINE-HEIGHT: normal; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'; mso-no-proof: yes">{<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; LINE-HEIGHT: normal; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'; mso-no-proof: yes"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: green">// I use the rand() function throughout this code to keep<o:p></o:p></SPAN></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; LINE-HEIGHT: normal; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'; mso-no-proof: yes"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: green">// the compiler from optimizing too much.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>If I had used<o:p></o:p></SPAN></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; LINE-HEIGHT: normal; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'; mso-no-proof: yes"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: green">// constant values, the compiler would have optimized all<o:p></o:p></SPAN></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; LINE-HEIGHT: normal; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'; mso-no-proof: yes"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: green">// of these away.<o:p></o:p></SPAN></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; LINE-HEIGHT: normal; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'; mso-no-proof: yes"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: blue">int</SPAN> params[] = { rand(), rand(), rand(),<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; LINE-HEIGHT: normal; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'; mso-no-proof: yes"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>rand(), rand(), rand() };<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; LINE-HEIGHT: normal; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'; mso-no-proof: yes"><o:p>&nbsp;</o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; LINE-HEIGHT: normal; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'; mso-no-proof: yes"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>FunctionWith6Params( params[0], params[1], params[2],<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; LINE-HEIGHT: normal; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'; mso-no-proof: yes"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>params[3], params[4], params[5] );<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; LINE-HEIGHT: normal; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'; mso-no-proof: yes"><o:p>&nbsp;</o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; LINE-HEIGHT: normal; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'; mso-no-proof: yes"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: blue">return</SPAN> 0;<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 0pt; LINE-HEIGHT: normal; mso-layout-grid-align: none"><SPAN style="FONT-SIZE: 10pt; FONT-FAMILY: 'Courier New'; mso-no-proof: yes">}<o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 10pt"><o:p><FONT face=Calibri size=3>&nbsp;</FONT></o:p></P>
<P class=MsoNormal style="MARGIN: 0in 0in 10pt"><FONT face=Calibri size=3>Cut and paste this code into a cpp file (such as example.cpp).<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>I used the Windows SDK (specifically the Windows SDK CMD Shell) to compile this code as C++ code by using the following command line:</FONT></P>
<P class=CommandLine style="MARGIN: 0in 0in 10pt"><FONT face="Courier New" size=3>cl /EHa /Zi /Od /favor:INTEL64 example.cpp /link /debug</FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 10pt"><FONT face=Calibri size=3>Notice the /Od switch.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>This disables all optimizations.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>Later on, I’ll enable maximum optimization and that’s when the fun begins!</FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 10pt"><FONT face=Calibri size=3>Once you have the executable module built (mine is named example.exe), then you can fire it up in the debugger as follows:</FONT></P>
<P class=CommandLine style="MARGIN: 0in 0in 10pt"><FONT face="Courier New" size=3>windbg -Q -c "bu example!main;g;" example.exe</FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 10pt"><FONT face=Calibri size=3>The command above will launch the application in windbg, set a breakpoint on the main() routine, and then go to that breakpoint.</FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 10pt"><FONT face=Calibri size=3>Now, let’s have a look at a diagram of what the stack looks like when FunctionWith6Params() gets called.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>The diagram shown below illustrates the stack when the instruction pointer is at the beginning of the code for FunctionWith6Params() but before the prolog code has executed:</FONT></P>
<H3></H3>
<P><A href="http://blogs.msdn.com/blogfiles/ntdebugging/WindowsLiveWriter/ChallengesofDebuggingOptimizedx64Code_D097/clip_image002%5B7%5D.gif" mce_href="http://blogs.msdn.com/blogfiles/ntdebugging/WindowsLiveWriter/ChallengesofDebuggingOptimizedx64Code_D097/clip_image002%5B7%5D.gif"><IMG title=clip_image002[7] style="BORDER-RIGHT: 0px; BORDER-TOP: 0px; DISPLAY: block; FLOAT: none; MARGIN-LEFT: auto; BORDER-LEFT: 0px; MARGIN-RIGHT: auto; BORDER-BOTTOM: 0px" height=195 alt=clip_image002[7] src="http://blogs.msdn.com/blogfiles/ntdebugging/WindowsLiveWriter/ChallengesofDebuggingOptimizedx64Code_D097/clip_image002%5B7%5D_thumb.gif" width=603 border=0 mce_src="http://blogs.msdn.com/blogfiles/ntdebugging/WindowsLiveWriter/ChallengesofDebuggingOptimizedx64Code_D097/clip_image002%5B7%5D_thumb.gif"></A></P>
<P class=MsoNormal style="MARGIN: 0in 0in 10pt"><FONT face=Calibri size=3>Notice that the caller, in this case main(), allocated enough space on the stack for all six parameters to FunctionWith6Params() even though the first four parameters are passed in via registers.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>The extra space on the stack is commonly referred to as the “home space” for the register parameters.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>In the previous diagram, I have shown those slots filled with xxxxxxxx to indicate that the values within there are virtually random at this point.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>That’s because the caller, main(), does not initialize these slots.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>The called function, at its discretion, may store the first four parameters in this space for safe keeping.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>This is exactly what happens in non-optimized builds and is a huge debugging convenience since you can easily find the contents of the first four parameters on the stack if you need to.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>Additionally, windbg stack commands such as kb and kv which show these first few parameters will report true results.</FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 10pt"><FONT face=Calibri size=3>With all of that said, here is what the stack looks like after the prolog code in FunctionWith6Params() executes:</FONT></P>
<P><A href="http://blogs.msdn.com/blogfiles/ntdebugging/WindowsLiveWriter/ChallengesofDebuggingOptimizedx64Code_D097/clip_image004%5B9%5D.gif" mce_href="http://blogs.msdn.com/blogfiles/ntdebugging/WindowsLiveWriter/ChallengesofDebuggingOptimizedx64Code_D097/clip_image004%5B9%5D.gif"><IMG title=clip_image004[9] style="BORDER-RIGHT: 0px; BORDER-TOP: 0px; DISPLAY: block; FLOAT: none; MARGIN-LEFT: auto; BORDER-LEFT: 0px; MARGIN-RIGHT: auto; BORDER-BOTTOM: 0px" height=508 alt=clip_image004[9] src="http://blogs.msdn.com/blogfiles/ntdebugging/WindowsLiveWriter/ChallengesofDebuggingOptimizedx64Code_D097/clip_image004%5B9%5D_thumb.gif" width=647 border=0 mce_src="http://blogs.msdn.com/blogfiles/ntdebugging/WindowsLiveWriter/ChallengesofDebuggingOptimizedx64Code_D097/clip_image004%5B9%5D_thumb.gif"></A></P>
<P class=MsoNormal style="MARGIN: 0in 0in 10pt"><FONT face=Calibri size=3>The prolog assembly code for FunctionWith6Params() is shown below:</FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 10pt"><FONT face=Calibri size=3>0:000&gt; uf .</FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 10pt"><FONT face=Calibri size=3>example!FunctionWith6Params [c:\temp\blog_entry\sample_code\example.cpp @ 28]:</FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 10pt"><SPAN style="FONT-SIZE: 10pt; LINE-HEIGHT: 115%; FONT-FAMILY: 'Courier New'"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN>41 00000001`40015900 mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>dword ptr [rsp+20h],r9d<BR><SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN>41 00000001`40015905 mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>dword ptr [rsp+18h],r8d<BR><SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN>41 00000001`4001590a mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>dword ptr [rsp+10h],edx<BR><SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN>41 00000001`4001590e mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>dword ptr [rsp+8],ecx<BR><SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN>41 00000001`40015912 push<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>rbx<BR><SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN>41 00000001`40015913 push<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>rsi<BR><SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN>41 00000001`40015914 push<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>rdi<BR><SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN>41 00000001`40015915 sub<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>rsp,50h <o:p></o:p></SPAN></P>
<P class=MsoNormal style="MARGIN: 0in 0in 10pt"><FONT face=Calibri size=3>You can see that the first four instructions save the first four parameters on the stack in the home space allocated by main().<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>Then, the prolog code saves any non-volatile registers that FunctionWith6Params() plans to use during its execution.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>The saved registers’ states are restored in the function epilog code prior to returning to the caller.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>Finally the prolog code reserves some space on the stack, in this case, for 0x50 bytes.</FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 10pt"><FONT face=Calibri size=3>What is this space reserved on the top of the stack for?<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>First, space is created for any local variables.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>In this case, FunctionWith6Params() has two.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>However, those two local variables only account for 0x10 bytes.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>What’s the deal with the rest of the space created on the top of the stack?</FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 10pt"><FONT face=Calibri size=3>On the x64 platform, when code prepares the stack for calling another function, it does not use push instructions to put the parameters on the stack as is commonly the case in x86 code.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>Instead, the stack pointer typically remains fixed for a particular function.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>The compiler looks at all of the functions the code in the current function calls, it finds the one with the maximum number of parameters, and then creates enough space on the stack to accommodate those parameters.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>In this example, FunctionWith6Params() calls printf() passing it 8 parameters.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>Since that is the called function with the maximum number of parameters, the compiler creates 8 slots on the stack.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>The top four slots on the stack will then be the home space used by any functions FunctionWith6Params() calls.</FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 10pt"><FONT face=Calibri size=3>A handy side effect of the x64 calling convention is that once you are inside the bracket of the prolog and epilog of a function, the stack pointer does not change while the instruction pointer is in that function.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>This eliminates the need for a base pointer which is common in x86 calling conventions.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>When the code in FunctionWith6Params() prepares to call a child function, it simply puts the first four parameters into the required registers and, if there are more than 4 parameters, it uses mov instructions to place the remaining parameters in the allocated stack space but making sure to skip the first four parameter slots on the stack.</FONT></P>
<H2 style="MARGIN: 10pt 0in 0pt"><FONT face=Cambria color=#4f81bd size=4>Debugging Optimized x64 code (The Nightmare Begins)</FONT></H2>
<P class=MsoNormal style="MARGIN: 0in 0in 10pt"><FONT face=Calibri size=3>Why is debugging x64 optimized code so tricky?<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>Well, remember that home space that the caller creates on the stack for the callee to save the first four parameters?<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>It turns out that the calling convention <B style="mso-bidi-font-weight: normal">does not require</B> the callee to use that space!<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>And you can certainly bet that optimized x64 code will not use that space unless it is necessary and convenient for its optimization purposes.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>Moreover, when optimized code does use the home space, it could use it to store non-volatile registers rather than the first four parameters to the function.</FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 10pt"><FONT face=Calibri size=3>Go ahead and recompile the example code using the following command line:</FONT></P>
<P class=CommandLine style="MARGIN: 0in 0in 10pt"><FONT face="Courier New" size=3>cl /EHa /Zi /Ox /favor:INTEL64 example.cpp /link /debug</FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 10pt"><FONT size=3><FONT face=Calibri>Notice the use of the /Ox switch.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>This turns on maximum optimization.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>Debug symbols are still turned on so we can debug the optimized code easily.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN><B style="mso-bidi-font-weight: normal">Always build your release product with debug information turned on so you can debug your release builds!<o:p></o:p></B></FONT></FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 10pt"><FONT face=Calibri size=3>Let’s look at how the prolog assembly code for FunctionWith6Params() has changed:</FONT></P>
<P class=Code style="MARGIN: 0in 0in 10pt"><FONT face="Courier New"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN>41 00000001`400158e0 mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>qword ptr [rsp+8],rbx<BR><SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN>41 00000001`400158e5 mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>qword ptr [rsp+10h],rbp<BR><SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN>41 00000001`400158ea mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>qword ptr [rsp+18h],rsi<BR><SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN>41 00000001`400158ef push<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>rdi<BR><SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN>41 00000001`400158f0 push<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>r12<BR><SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN>41 00000001`400158f2 push<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>r13<BR><SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN>41 00000001`400158f4 sub<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>rsp,40h<BR><SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN>41 00000001`400158f8 mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>ebx,r9d<BR><SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN>41 00000001`400158fb mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>edi,r8d<BR><SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN>41 00000001`400158fe mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>esi,edx<BR><SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN>41 00000001`40015900 mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>r12d,ecx</FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 10pt"><FONT face=Calibri size=3>The optimized code is significantly different!<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>Let’s itemize the changes below:</FONT></P>
<P class=MsoListParagraphCxSpFirst style="MARGIN: 0in 0in 0pt 0.5in; TEXT-INDENT: -0.25in; mso-list: l0 level1 lfo1"><SPAN style="FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol"><SPAN style="mso-list: Ignore"><FONT size=3>·</FONT><SPAN style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN></SPAN></SPAN><FONT face=Calibri size=3>The function uses the home space on the stack, however, it does not store the first four parameters there.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>Instead it uses the space to store some non-volatile registers it must restore later in the epilog code.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>This optimized code is going to make use of more processor registers, therefore it must save more of the non-volatile registers.</FONT></P>
<P class=MsoListParagraphCxSpMiddle style="MARGIN: 0in 0in 0pt 0.5in; TEXT-INDENT: -0.25in; mso-list: l0 level1 lfo1"><SPAN style="FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol"><SPAN style="mso-list: Ignore"><FONT size=3>·</FONT><SPAN style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN></SPAN></SPAN><FONT face=Calibri size=3>It still pushes three non-volatile registers onto the stack for safe keeping along with the other three it stored in the home space.</FONT></P>
<P class=MsoListParagraphCxSpMiddle style="MARGIN: 0in 0in 0pt 0.5in; TEXT-INDENT: -0.25in; mso-list: l0 level1 lfo1"><SPAN style="FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol"><SPAN style="mso-list: Ignore"><FONT size=3>·</FONT><SPAN style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN></SPAN></SPAN><FONT face=Calibri size=3>It then creates space on the stack.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>However, it’s less space than in the non-optimized code, and is only 0x40 bytes.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>That’s because the optimized code uses registers to represent the local variables someLocalVariable1 and someLocalVariable2.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>Therefore, it only has to create space for the 8 slots needed to call the function with the maximum number of parameters, printf().</FONT></P>
<P class=MsoListParagraphCxSpLast style="MARGIN: 0in 0in 10pt 0.5in; TEXT-INDENT: -0.25in; mso-list: l0 level1 lfo1"><SPAN style="FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol"><SPAN style="mso-list: Ignore"><FONT size=3>·</FONT><SPAN style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN></SPAN></SPAN><FONT face=Calibri size=3>It then stores the first four parameters into non-volatile registers rather than in the home space. (Don’t count on this behavior.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>An optimized function may make no copies of the contents of rcx, rdx, r8, and r9.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>It all depends on the structure of the code)</FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 10pt"><FONT face=Calibri size=3>Now step through FunctionWith6Params() to the source line just after the first printf() call.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>The output generated from the printf() call on my machine is as follows:</FONT></P>
<P class=ConsoleOutput style="MARGIN: 0in 0in 10pt"><FONT face="Courier New">Entering FunctionWith6Params( 29, 4823, 18BE, 6784, 4AE1, 3D6C )</FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 10pt"><FONT face=Calibri size=3>A common version of the stack command in windbg is kb, which also displays the first few parameters to each function in the frame.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>In reality, it is displaying the first few positions of the stack.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>The output for the kb command is as follows:</FONT></P>
<P class=ConsoleOutput style="MARGIN: 0in 0in 10pt"><FONT face="Courier New">0:000&gt; kb<BR>RetAddr<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>: Args to Child<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>: Call Site<BR>00000001`4001593b : <B style="mso-bidi-font-weight: normal"><SPAN style="COLOR: red">00000000`00004ae1 00000000`00004823 00000000`000018be 00000000`007e3570</SPAN></B> : example!FunctionWith6Params+0x6a [c:\temp\blog_entry\sample_code\example.cpp @ 37]<BR>00000001`40001667 : 00000000`00000000 00000000`00000000 00000000`00000000 00000000`00000001 : example!main+0x5b [c:\temp\blog_entry\sample_code\example.cpp @ 57]<BR>00000000`76d7495d : 00000000`00000000 00000000`00000000 00000000`00000000 00000000`00000000 : example!__tmainCRTStartup+0x15b<BR>00000000`76f78791 : 00000000`00000000 00000000`00000000 00000000`00000000 00000000`00000000 : kernel32!BaseThreadInitThunk+0xd<BR>00000000`00000000 : 00000000`00000000 00000000`00000000 00000000`00000000 00000000`00000000 : ntdll!RtlUserThreadStart+0x1d</FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 10pt"><FONT face=Calibri size=3>Notice that not all of the first four parameters of FunctionWith6Params() match what is shown by the kb command!<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>Of course, this is a side effect of the optimization. <SPAN style="mso-spacerun: yes">&nbsp;</SPAN><B style="mso-bidi-font-weight: normal">You simply cannot trust the output displayed by kb and kv in optimized code</B>.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>This is the biggest reason why optimized x64 code is so difficult to debug.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>Trust me when I say that it’s just pure luck that the second and third slots in the kb output above match the actual parameter values to FunctionWith6Params().<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>It’s because FunctionWith6Params() stores non-volatile registers in those slots and it just so happens that main() put those values in those non-volatile registers prior to calling FunctionWith6Params().</FONT></P>
<H3 style="MARGIN: 10pt 0in 0pt"><FONT face=Cambria color=#4f81bd size=3>Parameter Sleuthing -- Technique 1 (Down the Call Graph)</FONT></H3>
<P class=MsoNormal style="MARGIN: 0in 0in 10pt"><FONT face=Calibri size=3>Now, let’s look at some techniques for finding elusive function parameters to functions in the call stack while running x64 code.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>I have placed a DebugBreak() call in FunctionWith4Params() to illustrate.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>Go ahead and let the code run in windbg until it hits this breakpoint.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>Now, imagine what you are looking at is actually not a live debugging scenario but rather a dump file from a customer of yours and this is the point where your application has crashed.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>So, you take a look at the stack and it looks like the following:</FONT></P>
<P class=ConsoleOutput style="MARGIN: 0in 0in 10pt"><FONT face="Courier New">0:000&gt; kL<BR>Child-SP<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>RetAddr<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>Call Site<BR>00000000`0012fdc8 00000001`40015816 ntdll!DbgBreakPoint<BR>00000000`0012fdd0 00000001`400158a0 example!FunctionWith4Params+0x66<BR>00000000`0012fe50 00000001`40015977 example!FunctionWith5Params+0x20<BR>00000000`0012fe80 00000001`40015a0b example!FunctionWith6Params+0x97<BR>00000000`0012fee0 00000001`4000168b example!main+0x5b<BR>00000000`0012ff20 00000000`7733495d example!__tmainCRTStartup+0x15b<BR>00000000`0012ff60 00000000`77538791 kernel32!BaseThreadInitThunk+0xd<BR>00000000`0012ff90 00000000`00000000 ntdll!RtlUserThreadStart+0x1d</FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 10pt"><FONT size=3><FONT face=Calibri>Now, let’s say that in order for you to figure out what went wrong, you need to know the first parameter to FunctionWith6Params().<SPAN style="mso-spacerun: yes">&nbsp; </SPAN><B style="mso-bidi-font-weight: normal">Assume you have not seen the first parameter in the console output. No fair cheating!</B></FONT></FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 10pt"><FONT face=Calibri size=3>The first technique I would like to illustrate involves digging downward into the call graph <SPAN style="mso-spacerun: yes">&nbsp;</SPAN>to find out what has happened to the contents of rcx (the first parameter) after entering FunctionWith6Params().<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>In this case, since the parameters are 32bit integers, we’ll be attempting to follow the contents of ecx, which is the lower half of rcx.</FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 10pt"><FONT face=Calibri size=3>Let’s start by looking at the assembly code within FunctionWith6Params() starting from the beginning up to the call into FunctionWith5Params()::</FONT></P>
<P class=ConsoleOutput style="MARGIN: 0in 0in 10pt"><FONT face="Courier New">0:000&gt; u example!FunctionWith6Params example!FunctionWith6Params+0x97<BR>example!FunctionWith6Params [c:\temp\blog_entry\sample_code\example.cpp @ 41]:<BR>00000001`400158e0 mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>qword ptr [rsp+8],rbx<BR>00000001`400158e5 mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>qword ptr [rsp+10h],rbp<BR>00000001`400158ea mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>qword ptr [rsp+18h],rsi<BR>00000001`400158ef push<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>rdi<BR>00000001`400158f0 push<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>r12<BR>00000001`400158f2 push<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>r13<BR>00000001`400158f4 sub<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>rsp,40h<BR>00000001`400158f8 mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>ebx,r9d<BR>00000001`400158fb mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>edi,r8d<BR>00000001`400158fe mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>esi,edx<BR>00000001`40015900 mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><B style="mso-bidi-font-weight: normal"><SPAN style="COLOR: #4f81bd; mso-themecolor: accent1">r12d</SPAN></B>,<B style="mso-bidi-font-weight: normal"><SPAN style="COLOR: red">ecx</SPAN></B><BR>00000001`40015903 call<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>example!rand (00000001`4000148c)<BR>00000001`40015908 movsxd<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>r13,eax<BR>00000001`4001590b call<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>example!rand (00000001`4000148c)<BR>00000001`40015910 lea<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>rdx,[example!`string'+0x68 (00000001`40020d40)]<BR>00000001`40015917 movsxd<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>rbp,eax<BR>00000001`4001591a mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>eax,dword ptr [rsp+88h]<BR>00000001`40015921 lea<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>rcx,[example!`string'+0x80 (00000001`40020d58)]<BR>00000001`40015928 mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>dword ptr [rsp+38h],eax<BR>00000001`4001592c mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>eax,dword ptr [rsp+80h]<BR>00000001`40015933 mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>r9d,esi<BR>00000001`40015936 mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>dword ptr [rsp+30h],eax<BR>00000001`4001593a mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>r8d,<B style="mso-bidi-font-weight: normal"><SPAN style="COLOR: #4f81bd; mso-themecolor: accent1">r12d</SPAN></B><BR>00000001`4001593d mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>dword ptr [rsp+28h],ebx<BR>00000001`40015941 mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>dword ptr [rsp+20h],edi<BR>00000001`40015945 call<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>example!printf (00000001`400012bc)<BR>00000001`4001594a call<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>example!rand (00000001`4000148c)<BR>00000001`4001594f mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>edi,eax<BR>00000001`40015951 call<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>example!rand (00000001`4000148c)<BR>00000001`40015956 mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>esi,eax<BR>00000001`40015958 call<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>example!rand (00000001`4000148c)<BR>00000001`4001595d mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>ebx,eax<BR>00000001`4001595f call<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>example!rand (00000001`4000148c)<BR>00000001`40015964 mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><B style="mso-bidi-font-weight: normal"><SPAN style="COLOR: #00b050">r9d</SPAN></B>,<B style="mso-bidi-font-weight: normal"><SPAN style="COLOR: #4f81bd; mso-themecolor: accent1">r12d</SPAN></B><BR>00000001`40015967 mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>r8d,esi<BR>00000001`4001596a mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>edx,ebx<BR>00000001`4001596c mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>ecx,eax<BR>00000001`4001596e mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>dword ptr [rsp+20h],edi<BR>00000001`40015972 call<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>example!ILT+5(?FunctionWith5ParamsYAXHHHHHZ) (00000001`4000100a)</FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 10pt"><FONT face=Calibri size=3>FunctionWith6Params() copies ecx into r12d to preserve it for later use since the contents must be passed to multiple functions within the body of FunctionWith6Params().<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>Notice at the point where FunctionWith5Params() is called, the contents of ecx have been copied into both r12d and r9d, however, r9d is volatile so we must be careful with it since it could get overwritten prior to the next function call when FunctionWith5Params() calls FunctionWith4Params().<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>Armed with this information, let’s dig into the assembly code for FunctionWith5Params() that has executed up to this point:</FONT></P>
<P class=ConsoleOutput style="MARGIN: 0in 0in 10pt"><FONT face="Courier New">0:000&gt; u example!FunctionWith5Params example!FunctionWith5Params+0x20<BR>example!FunctionWith5Params [c:\temp\blog_entry\sample_code\example.cpp @ 32]:<BR>00000001`40015880 mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>qword ptr [rsp+8],rbx<BR>00000001`40015885 mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>qword ptr [rsp+10h],rsi<BR>00000001`4001588a push<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>rdi<BR>00000001`4001588b sub<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>rsp,20h<BR>00000001`4001588f mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>ecx,dword ptr [rsp+50h]<BR>00000001`40015893 mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><B style="mso-bidi-font-weight: normal"><SPAN style="COLOR: #4f81bd; mso-themecolor: accent1">eax</SPAN></B>,<B style="mso-bidi-font-weight: normal"><SPAN style="COLOR: red">r9d</SPAN></B><BR>00000001`40015896 mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><B style="mso-bidi-font-weight: normal"><SPAN style="COLOR: red">r9d</SPAN></B>,edx<BR>00000001`40015899 mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><B style="mso-bidi-font-weight: normal"><SPAN style="COLOR: #00b050">edx</SPAN></B>,<B style="mso-bidi-font-weight: normal"><SPAN style="COLOR: #4f81bd; mso-themecolor: accent1">eax</SPAN></B><BR>00000001`4001589b call<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>example!ILT+10(?FunctionWith4ParamsYAXHHHHZ) (00000001`4000100f)</FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 10pt"><FONT face=Calibri size=3>At the point where FunctionWith4Params() is called, the value we are after is now in eax, edx, and r12d.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>Again, be careful with eax and edx as they are volatile.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>However, since FunctionWith5Params() did not touch r12d, the contents of the parameter we are still after are still in r12d</FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 10pt"><FONT face=Calibri size=3>Now, let’s look at the code in FunctionWith4Params() that has executed so far:</FONT></P>
<P class=ConsoleOutput style="MARGIN: 0in 0in 10pt"><FONT face="Courier New">0:000&gt; u example!FunctionWith4Params example!FunctionWith4Params+0x66<BR>example!FunctionWith4Params [c:\temp\blog_entry\sample_code\example.cpp @ 9]:<BR>00000001`400157b0 48895c2408<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>qword ptr [rsp+8],rbx<BR>00000001`400157b5 48896c2410<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>qword ptr [rsp+10h],rbp<BR>00000001`400157ba 4889742418<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>qword ptr [rsp+18h],rsi<BR>00000001`400157bf 57<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>push<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>rdi<BR><B style="mso-bidi-font-weight: normal"><SPAN style="COLOR: red">00000001`400157c0 4154<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>push<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>r12</SPAN></B><BR>00000001`400157c2 4155<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>push<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>r13<BR>00000001`400157c4 4156<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>push<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>r14<BR>00000001`400157c6 4157<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>push<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>r15<BR>00000001`400157c8 4883ec50<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>sub<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>rsp,50h<BR>00000001`400157cc 458be1<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>r12d,r9d<BR>00000001`400157cf 458be8<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>r13d,r8d<BR>00000001`400157d2 448bf2<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><B style="mso-bidi-font-weight: normal"><SPAN style="COLOR: #00b050">r14d</SPAN></B>,<B style="mso-bidi-font-weight: normal"><SPAN style="COLOR: #00b0f0">edx</SPAN></B><BR>00000001`400157d5 448bf9<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN>mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>r15d,ecx<BR>00000001`400157d8 e8afbcfeff<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>call<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>example!rand (00000001`4000148c)<BR>00000001`400157dd 4898<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>cdqe<BR>00000001`400157df 4889442448<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>qword ptr [rsp+48h],rax<BR>00000001`400157e4 e8a3bcfeff<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>call<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>example!rand (00000001`4000148c)<BR>00000001`400157e9 4898<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>cdqe<BR>00000001`400157eb 4889442440<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>qword ptr [rsp+40h],rax<BR>00000001`400157f0 e897bcfeff<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>call<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>example!rand (00000001`4000148c)<BR>00000001`400157f5 4863e8<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>movsxd<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>rbp,eax<BR>00000001`400157f8 e88fbcfeff<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>call<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>example!rand (00000001`4000148c)<BR>00000001`400157fd 4863f0<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>movsxd<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>rsi,eax<BR>00000001`40015800 e887bcfeff<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>call<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>example!rand (00000001`4000148c)<BR>00000001`40015805 4863f8<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>movsxd<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>rdi,eax<BR>00000001`40015808 e87fbcfeff<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>call<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>example!rand (00000001`4000148c)<BR>00000001`4001580d 4863d8<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>movsxd<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>rbx,eax<BR>00000001`40015810 ff15a24b0100<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>call<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>qword ptr [example!_imp_DebugBreak (00000001`4002a3b8)]</FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 10pt"><FONT face=Calibri size=3>We just found what we are looking for!<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>The red highlighted line shows r12 being saved on the stack because FunctionWith4Params() wants to reuse r12.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>Since r12 is a non-volatile register, it must save the contents somewhere so it can restore the contents before the function exits.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>All we have to do is locate that slot on the stack, and assuming that the stack has not been corrupted, we’ll have our prize.</FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 10pt"><FONT face=Calibri size=3>One technique for finding the slot is to start with the Child-SP value associated with the FunctionWith4Params() frame in the stack dump shown previously, which is 00000000`0012fdd0 in my build.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>Using that value, let’s dump the stack content using the dps command:</FONT></P>
<P class=ConsoleOutput style="MARGIN: 0in 0in 10pt"><FONT face="Courier New">0:000&gt; dps 00000000`0012fdd0 L10<BR>00000000`0012fdd0<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>00000001`00000001<BR>00000000`0012fdd8<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>00000001`40024040 example!_iob+0x30<BR>00000000`0012fde0<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>00000000`00000000<BR>00000000`0012fde8<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>00000001`40002f9e example!_getptd_noexit+0x76<BR>00000000`0012fdf0<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>00000000`00261310<BR>00000000`0012fdf8<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>00000001`40001a92 example!_unlock_file2+0x16<BR>00000000`0012fe00<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>00000000`00000001<BR>00000000`0012fe08<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>00000000`00004823<BR>00000000`0012fe10<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>00000000`000041bb<BR>00000000`0012fe18<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>00000000`00005af1<BR>00000000`0012fe20<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>00000000`00000000<BR>00000000`0012fe28<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>00000000`00000000<BR>00000000`0012fe30<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>00000000`00002cd6<BR></FONT><FONT face="Courier New"><B style="mso-bidi-font-weight: normal"><SPAN style="COLOR: #00b050">00000000`0012fe38<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>00000000`00000029<BR></SPAN></B>00000000`0012fe40<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>00000000`00006952<BR><B style="mso-bidi-font-weight: normal"><SPAN style="COLOR: red">00000000`0012fe48</SPAN></B><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>00000001`400158a0 example!FunctionWith5Params+0x20 [c:\temp\blog_entry\sample_code\example.cpp @ 34]</FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 10pt"><FONT face=Calibri size=3>I have highlighted the position that rsp points to when we enter FunctionWith4Params() in red.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>Based on the prolog code shown for FunctionWith4Params() above, we can find the slot where our prize is stored.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>I have highlighted it in green above and you can see the value on my machine is 0x29, which matches the value printf() sent to the console.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>Additionally, I highlighted r14d in green in the assembly code for FunctionWith4Params() to indicate where the contents of edx (the second parameter) were copied to.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>Since FunctionWith4Params() is virtually the top function on the stack (due to the fact that DebugBreak() takes no parameters), then r14d should also contain the value we are after.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>Dumping the contents of r14 proves this as shown below:</FONT></P>
<P class=ConsoleOutput style="MARGIN: 0in 0in 10pt"><FONT face="Courier New">0:000&gt; r r14<BR>r14=0000000000000029</FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 10pt"><FONT face=Calibri size=3>To sum up, when you are chasing register-passed parameter values down through a call graph, look for places where the value is copied into.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>Specifically, if the value is copied into a non-volatile register, that can be a good thing.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>If a downstream function wants to reuse that non-volatile register, it must first save the contents (usually on the stack) so it can restore it when it is done.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>If you’re not that lucky, you may be able to trace a register it was copied into which has not been changed at the breakpoint.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>Both conditions were shown above.</FONT></P>
<H3 style="MARGIN: 10pt 0in 0pt"><FONT face=Cambria color=#4f81bd size=3>Parameter Sleuthing -- Technique 2 (Up the Call Graph)</FONT></H3>
<P class=MsoNormal style="MARGIN: 0in 0in 10pt"><FONT face=Calibri size=3>The second technique I would like to demonstrate is very similar to the first technique except that we walk the stack/call-graph in the opposite direction as before, that is, up the call graph.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>Unfortunately, none of these techniques are fool proof and guaranteed to bear fruit.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>So, it’s nice to have multiple techniques to employ even though all of them may strike out.</FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 10pt"><FONT face=Calibri size=3>We know that when FunctionWith6Params() gets called, ecx contains the value we are after.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>Therefore, if we look at the code for main(), maybe we can find the source from which the ecx register was filled prior to the function call.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>Let’s have a look as the assembly code in main():</FONT></P>
<P class=ConsoleOutput style="MARGIN: 0in 0in 10pt"><FONT face="Courier New">0:000&gt; u example!main example!main+0x5b<BR>example!main [c:\temp\blog_entry\sample_code\example.cpp @ 58]:<BR>00000001`400159b0 48895c2408<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>qword ptr [rsp+8],rbx<BR>00000001`400159b5 48896c2410<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>qword ptr [rsp+10h],rbp<BR>00000001`400159ba 4889742418<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>qword ptr [rsp+18h],rsi<BR>00000001`400159bf 48897c2420<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>qword ptr [rsp+20h],rdi<BR>00000001`400159c4 4154<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>push<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>r12<BR>00000001`400159c6 4883ec30<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>sub<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>rsp,30h<BR>00000001`400159ca e8bdbafeff<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>call<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>example!rand (00000001`4000148c)<BR>00000001`400159cf 448be0<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>r12d,eax<BR>00000001`400159d2 e8b5bafeff<SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;</SPAN>call<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>example!rand (00000001`4000148c)<BR>00000001`400159d7 8be8<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>ebp,eax<BR>00000001`400159d9 e8aebafeff<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>call<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>example!rand (00000001`4000148c)<BR>00000001`400159de 8bf0<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>esi,eax<BR>00000001`400159e0 e8a7bafeff<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>call<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>example!rand (00000001`4000148c)<BR>00000001`400159e5 8bf8<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>edi,eax<BR>00000001`400159e7 e8a0bafeff<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>call<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>example!rand (00000001`4000148c)<BR>00000001`400159ec 8bd8<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>ebx,eax<BR>00000001`400159ee e899bafeff<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>call<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>example!rand (00000001`4000148c)<BR>00000001`400159f3 448bcf<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>r9d,edi<BR>00000001`400159f6 89442428<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>dword ptr [rsp+28h],eax<BR>00000001`400159fa 448bc6<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>r8d,esi<BR>00000001`400159fd 8bd5<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>edx,ebp<BR>00000001`400159ff 418bcc<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><B style="mso-bidi-font-weight: normal"><SPAN style="COLOR: red">mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>ecx,r12d</SPAN></B><BR>00000001`40015a02 895c2420<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>dword ptr [rsp+20h],ebx<BR>00000001`40015a06 e8fab5feff<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>call<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>example!ILT+0(?FunctionWith6ParamsYAXHHHHHHZ) (00000001`40001005)</FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 10pt"><FONT face=Calibri size=3>We see that ecx was copied from the contents of r12d.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>This is helpful since r12d is a non-volatile register, and if it is reused by a function further down the call stack, it must be preserved and that preservation usually means putting a copy on the stack.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>It would have been nice if ecx were filled with a value from the stack, at which point we would be virtually done.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>But in this case, we just need to start our journey back downwards again.</FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 10pt"><FONT face=Calibri size=3>We don’t have to look very far.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>Let’s have another look at the prolog code for FunctionWith6Params():</FONT></P>
<P class=ConsoleOutput style="MARGIN: 0in 0in 10pt"><FONT face="Courier New">example!FunctionWith6Params [c:\temp\blog_entry\sample_code\example.cpp @ 41]:<BR><SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN>41 00000001`400158e0 mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>qword ptr [rsp+8],rbx<BR><SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN>41 00000001`400158e5 mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>qword ptr [rsp+10h],rbp<BR><SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN>41 00000001`400158ea mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>qword ptr [rsp+18h],rsi<BR><SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN>41 00000001`400158ef push<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>rdi<BR><SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN>41 00000001`400158f0 <B style="mso-bidi-font-weight: normal"><SPAN style="COLOR: red">push<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>r12</SPAN></B><BR><SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN>41 00000001`400158f2 push<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>r13<BR><SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN>41 00000001`400158f4 sub<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>rsp,40h<BR><SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN>41 00000001`400158f8 mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>ebx,r9d<BR><SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN>41 00000001`400158fb mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>edi,r8d<BR><SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN>41 00000001`400158fe mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>esi,edx<BR><SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN>41 00000001`40015900 mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>r12d,ecx</FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 10pt"><FONT face=Calibri size=3>r12 is reused in FunctionWith6Params(), which means that our prize will be on the stack.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>Let’s start by looking at the Child-SP for this frame which is at 00000000`0012fe80 by using the dps command:</FONT></P>
<P class=ConsoleOutput style="MARGIN: 0in 0in 10pt"><FONT face="Courier New">0:000&gt; dps 00000000`0012fe80 L10<BR>00000000`0012fe80<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>00000000`00001649<BR>00000000`0012fe88<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>00000000`00005f90<BR>00000000`0012fe90<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>00000000`00000029<BR>00000000`0012fe98<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>00000000`00004823<BR>00000000`0012fea0<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>00000000`00006952<BR>00000000`0012fea8<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>00000001`00006784<BR>00000000`0012feb0<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>00000000`00004ae1<BR>00000000`0012feb8<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>00000001`00003d6c<BR>00000000`0012fec0<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>00000000`00000000<BR><B style="mso-bidi-font-weight: normal"><SPAN style="COLOR: #00b050">00000000`0012fec8<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>00000000`00000029</SPAN></B><BR>00000000`0012fed0<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>00000000`00006784<BR><B style="mso-bidi-font-weight: normal"><SPAN style="COLOR: red">00000000`0012fed8</SPAN></B><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>00000001`4000128b example!main+0x5b [c:\temp\blog_entry\sample_code\example.cpp @ 72]</FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 10pt"><FONT face=Calibri size=3>I have highlighted in red the slot rsp points to when we enter FunctionWith6Params().<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>At this point, it is a simple matter to walk the assembly code and find the slot where the value is stored.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>I have highlighted it in green above.</FONT></P>
<H3 style="MARGIN: 10pt 0in 0pt"><FONT face=Cambria color=#4f81bd size=3>Parameter Sleuthing -- Technique 3 (Inspecting Dead Space)</FONT></H3>
<P class=MsoNormal style="MARGIN: 0in 0in 10pt"><FONT face=Calibri size=3>The final technique I would like to demonstrate involves a little more trickery and involves looking at “dead” or previously used slots on the stack that are not used by the current function call.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>To demonstrate, let’s say that after the DebugBreak() is hit, we need to know what the contents of param4 that were passed to FunctionWith6Params().<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>Let’s have another look at the assembly that has executed for FunctionWith6Params() and this time, let’s follow r9d, the fourth parameter:</FONT></P>
<P class=ConsoleOutput style="MARGIN: 0in 0in 10pt"><FONT face="Courier New">0:000&gt; u example!FunctionWith6Params example!FunctionWith6Params+0x97<BR>example!FunctionWith6Params [c:\temp\blog_entry\sample_code\example.cpp @ 41]:<BR>00000001`400158e0 mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>qword ptr [rsp+8],rbx<BR>00000001`400158e5 mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>qword ptr [rsp+10h],rbp<BR>00000001`400158ea mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>qword ptr [rsp+18h],rsi<BR>00000001`400158ef push<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>rdi<BR>00000001`400158f0 push<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>r12<BR>00000001`400158f2 push<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>r13<BR>00000001`400158f4 sub<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="mso-spacerun: yes">&nbsp;</SPAN>rsp,40h<BR>00000001`400158f8 mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><B style="mso-bidi-font-weight: normal"><SPAN style="COLOR: #4f81bd; mso-themecolor: accent1">ebx</SPAN></B>,<B style="mso-bidi-font-weight: normal"><SPAN style="COLOR: red">r9d</SPAN></B><BR>00000001`400158fb mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>edi,r8d<BR>00000001`400158fe mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>esi,edx<BR>00000001`40015900 mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>r12d,ecx<BR>00000001`40015903 call<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>example!rand (00000001`4000148c)<BR>00000001`40015908 movsxd<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>r13,eax<BR>00000001`4001590b call<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>example!rand (00000001`4000148c)<BR>00000001`40015910 lea<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>rdx,[example!`string'+0x68 (00000001`40020d40)]<BR>00000001`40015917 movsxd<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>rbp,eax<BR>00000001`4001591a mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>eax,dword ptr [rsp+88h]<BR>00000001`40015921 lea<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>rcx,[example!`string'+0x80 (00000001`40020d58)]<BR>00000001`40015928 mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>dword ptr [rsp+38h],eax<BR>00000001`4001592c mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>eax,dword ptr [rsp+80h]<BR>00000001`40015933 mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>r9d,esi<BR>00000001`40015936 mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>dword ptr [rsp+30h],eax<BR>00000001`4001593a mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>r8d,r12d<BR>00000001`4001593d mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><B style="mso-bidi-font-weight: normal"><SPAN style="COLOR: #00b050">dword ptr [rsp+28h]</SPAN></B>,<B style="mso-bidi-font-weight: normal"><SPAN style="COLOR: #4f81bd; mso-themecolor: accent1">ebx</SPAN></B><BR>00000001`40015941 mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>dword ptr [rsp+20h],edi<BR>00000001`40015945 call<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>example!printf (00000001`400012bc)<BR>00000001`4001594a call<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>example!rand (00000001`4000148c)<BR>00000001`4001594f mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>edi,eax<BR>00000001`40015951 call<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>example!rand (00000001`4000148c)<BR>00000001`40015956 mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>esi,eax<BR>00000001`40015958 call<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>example!rand (00000001`4000148c)<BR>00000001`4001595d mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>ebx,eax<BR>00000001`4001595f call<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>example!rand (00000001`4000148c)<BR>00000001`40015964 mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>r9d,r12d<BR>00000001`40015967 mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>r8d,esi<BR>00000001`4001596a mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>edx,ebx<BR>00000001`4001596c mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>ecx,eax<BR>00000001`4001596e mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>dword ptr [rsp+20h],edi<BR>00000001`40015972 call<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>example!ILT+5(?FunctionWith5ParamsYAXHHHHHZ) (00000001`4000100a)</FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 10pt"><FONT face=Calibri size=3>Notice that r9d is first moved into ebx.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>But also, notice that it copied the contents into a slot on the stack at rsp+0x28.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>What is this slot?<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>It’s the sixth parameter to the following printf() call.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>Remember that the compiler looks at all of the functions the code calls and finds the function with the maximum number of parameters and then allocates enough space for that function.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>As the code prepares to call printf(), it is moving the value we are after into the sixth parameter slot in that reserved stack space.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>But what use is this information?</FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 10pt"><FONT face=Calibri size=3>If you examine FunctionWith6Params(), you see that every function called after printf() takes less than six parameters.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>Specifically, the call to FunctionWith5Params() only uses five of those slots and just leaves the remaining three with junk in them.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>This junk is actually our treasure!<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>From examining the code, it’s guaranteed that nobody has overwritten the slot represented by rsp+28.</FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 10pt"><FONT face=Calibri size=3>To find this slot, let’s again start by getting the Child-SP value for the frame we’re talking about as shown below:</FONT></P>
<P class=ConsoleOutput style="MARGIN: 0in 0in 10pt"><FONT face="Courier New">0:000&gt; kL<BR>Child-SP<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>RetAddr<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>Call Site<BR>00000000`0012fdc8 00000001`40015816 ntdll!DbgBreakPoint<BR>00000000`0012fdd0 00000001`400158a0 example!FunctionWith4Params+0x66<BR>00000000`0012fe50 00000001`40015977 example!FunctionWith5Params+0x20<BR><B style="mso-bidi-font-weight: normal"><SPAN style="COLOR: #00b050">00000000`0012fe80</SPAN></B> 00000001`40015a0b example!FunctionWith6Params+0x97<BR>00000000`0012fee0 00000001`4000168b example!main+0x5b<BR>00000000`0012ff20 00000000`7733495d example!__tmainCRTStartup+0x15b<BR>00000000`0012ff60 00000000`77538791 kernel32!BaseThreadInitThunk+0xd<BR>00000000`0012ff90 00000000`00000000 ntdll!RtlUserThreadStart+0x1d</FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 10pt"><FONT face=Calibri size=3>We can then take the highlighted value above and use the same offset in the code to find our value:</FONT></P>
<P class=ConsoleOutput style="MARGIN: 0in 0in 10pt"><FONT face="Courier New">0:000&gt; dd 000000000012fe80+28 L1<BR>00000000`0012fea8<SPAN style="mso-spacerun: yes">&nbsp; </SPAN><B style="mso-bidi-font-weight: normal"><SPAN style="COLOR: #00b050">00006784</SPAN></B></FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 10pt"><FONT face=Calibri size=3>As expected, the “dead” slot on the stack contains the value we are after.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>You can compare the value to the output shown on the console to verify.</FONT></P>
<H3 style="MARGIN: 10pt 0in 0pt"><FONT face=Cambria color=#4f81bd size=3>A Non-volatile Register Shortcut</FONT></H3>
<P class=MsoNormal style="MARGIN: 0in 0in 10pt"><FONT face=Calibri size=3>Now that I have shown you the theory behind finding these elusive values passed around in registers, let me show you a shortcut that will make life a little bit easier.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>The shortcut relies upon the /r option of the .frame command.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>When using .frame /r, the debugger has the smarts to track non-volatile registers.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>But as with any technique, always have multiple tools in your pocket in case you need to use all of them to verify a result.</FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 10pt"><FONT face=Calibri size=3>To demonstrate, let’s consider Technique 2 described previously where we look up the call graph and we want to know what r12 was prior to main() calling FunctionWith6Params().<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>Go ahead and re-launch the application in windbg and let it run until it hits the DebugBreak().<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>Now, let’s take a look at the stack including the frame numbers:</FONT></P>
<P class=ConsoleOutput style="MARGIN: 0in 0in 10pt"><FONT face="Courier New">0:000&gt; knL<BR><SPAN style="mso-spacerun: yes">&nbsp;</SPAN># Child-SP<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>RetAddr<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>Call Site<BR>00 00000000`0012fdc8 00000001`40015816 ntdll!DbgBreakPoint<BR>01 00000000`0012fdd0 00000001`400158a0 example!FunctionWith4Params+0x66<BR>02 00000000`0012fe50 00000001`40015977 example!FunctionWith5Params+0x20<BR>03 00000000`0012fe80 00000001`40015a0b example!FunctionWith6Params+0x97<BR><B style="mso-bidi-font-weight: normal"><SPAN style="COLOR: red">04 00000000`0012fee0 00000001`4000168b example!main+0x5b</SPAN></B><BR>05 00000000`0012ff20 00000000`7748495d example!__tmainCRTStartup+0x15b<BR>06 00000000`0012ff60 00000000`775b8791 kernel32!BaseThreadInitThunk+0xd<BR>07 00000000`0012ff90 00000000`00000000 ntdll!RtlUserThreadStart+0x1d</FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 10pt"><FONT face=Calibri size=3>Based on our previous analysis of the assembly in main(), we know that the first parameter to FunctionWith6Params() was also stored in the non-volatile register r12 in main() prior to calling FunctionWith6Params().<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>Now, check out what we get when we use the .frame /r command to set the current frame to 4.</FONT></P>
<P class=ConsoleOutput style="MARGIN: 0in 0in 10pt"><FONT face="Courier New">0:000&gt; .frame /r 4<BR>04 00000000`0012fee0 00000001`4000168b example!main+0x5b [c:\temp\blog_entry\sample_code\example.cpp @ 70]<BR>rax=0000000000002ea6 rbx=0000000000004ae1 rcx=0000000000002ea6<BR>rdx=0000000000145460 rsi=00000000000018be rdi=0000000000006784<BR>rip=0000000140015a0b rsp=000000000012fee0 rbp=0000000000004823<BR><SPAN style="mso-spacerun: yes">&nbsp;</SPAN>r8=000007fffffdc000<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>r9=0000000000001649 r10=0000000000000000<BR>r11=0000000000000246 <B style="mso-bidi-font-weight: normal"><SPAN style="COLOR: red">r12=0000000000000029</SPAN></B> r13=0000000000000000<BR>r14=0000000000000000 r15=0000000000000000<BR>iopl=0<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>nv up ei pl nz na pe nc<BR>cs=0033<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>ss=002b<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>ds=002b<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>es=002b<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>fs=0053<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>gs=002b<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>efl=00000202<BR>example!main+0x5b:<BR>00000001`40015a0b 488b5c2440<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>mov<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>rbx,qword ptr [rsp+40h] ss:00000000`0012ff20=0000000000000000</FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 10pt"><FONT face=Calibri size=3>As you can see, .frame /r shows the register contents as they were in main() prior to calling FunctionWith6Params().<SPAN style="mso-spacerun: yes">&nbsp; </SPAN><B style="mso-bidi-font-weight: normal">Beware!<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>You can only trust the non-volatile registers when using this command!</B><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>Be sure to check out the following link to see which registers are considered volatile: </FONT><A href="http://msdn.microsoft.com/en-us/library/ms794547.aspx"><FONT face=Calibri color=#0000ff size=3>Register Usage for x64 64-Bit</FONT></A><FONT face=Calibri size=3>.</FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 10pt"><FONT face=Calibri size=3>.frame /r can spare you the time spent manually digging around on the stack to find saved volatile registers.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>In my experiments, .frame /r even works where there is no symbol information available.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>However, it never hurts to know how to do it manually in case you’re faced with a situation where .frame /r breaks down.</FONT></P>
<H2 style="MARGIN: 10pt 0in 0pt"><FONT face=Cambria color=#4f81bd size=4>Conclusion</FONT></H2>
<P class=MsoNormal style="MARGIN: 0in 0in 10pt"><FONT face=Calibri size=3>The x64 calling convention and the abundance of general purpose registers in the processor bring many opportunities for optimization to the table.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>However, when all of those optimizations are in play, they can certainly make debugging difficult.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>After giving a brief overview of the x64 calling convention, I demonstrated three techniques one can use to find parameter values to various functions in the call stack.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>I also showed you a shortcut you can use to see non-volatile registers for a particular frame in the call stack.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>I hope you find these techniques useful in your debugging adventures.<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>Additionally, I urge you to become more familiar with all of the nuances of </FONT><A href="http://msdn.microsoft.com/en-us/library/ms794533.aspx"><FONT face=Calibri color=#0000ff size=3>the x64 calling convention</FONT></A><FONT face=Calibri size=3>.</FONT></P>
<P class=MsoNormal style="MARGIN: 0in 0in 10pt"><o:p><FONT face=Calibri size=3>&nbsp;</FONT></o:p></P>
<P mce_keep="true">&nbsp;</P></div>
    <div class="post-attachment-viewer">
		
    </div>
    <div class="post-actions">
        <div class="navigation-list-header"></div>
        <ul class="navigation-list">
            <!---->
            <li class="navigation-item"><a class="internal-link view-replies" href="/b/ntdebugging/archive/2009/01/09/challenges-of-debugging-optimized-x64-code.aspx#comments"><span></span>6 Comments</a></li>
            
            
        </ul>
        <div class="navigation-list-footer"></div>
    </div>
    <div class="post-tags"><div id="ctl00_content_ctl00_w_16373__9be11d_ctl00_ctl15_ctl01_Container" style="display: none;"><div class="tags-editor"><textarea id="ctl00_content_ctl00_w_16373__9be11d_ctl00_ctl15_ctl01_Tags" style="width: 97%; height: 100%;" rows="2" cols="30"></textarea><div style="white-space: nowrap; padding-top: 4px;"><table cellpadding="0" cellspacing="0" border="0" width="100%"><tr><td align="left"><input type="button" onclick="Telligent_Modal.Open('\/utility\/TagSelector.aspx?TagEditor=ctl00_content_ctl00_w_16373__9be11d_ctl00_ctl15_ctl01_TagEditor',400,300,null);;return false;" value="Select Tags..." /></td><td align="right"><input type="button" onclick="ctl00_content_ctl00_w_16373__9be11d_ctl00_ctl15_ctl01.Save(); return false;" value="Save" /><input type="button" onclick="ctl00_content_ctl00_w_16373__9be11d_ctl00_ctl15_ctl01.Close(); return false;" value="Cancel" /></td></tr></table></div></div></div><span id="ctl00_content_ctl00_w_16373__9be11d_ctl00_ctl15_ctl02"><a href="http://blogs.msdn.com/b/ntdebugging/archive/tags/Debugging/" rel="tag">Debugging</a>, <a href="http://blogs.msdn.com/b/ntdebugging/archive/tags/Trey/" rel="tag">Trey</a>, <a href="http://blogs.msdn.com/b/ntdebugging/archive/tags/x64/" rel="tag">x64</a></span><input type="hidden" name="ctl00$content$ctl00$w_16373$_9be11d$ctl00$ctl15$ctl02" id="ctl00_content_ctl00_w_16373__9be11d_ctl00_ctl15_ctl02_State" value="nochange" /></div>
</div>
<div class="full-post-footer"></div></div>
<div class="content-fragment-footer"></div>
<div class="content-fragment-bottom wireframe-content-fragment-bottom"><div class="r1 wireframe-r1"></div><div class="r2 wireframe-r2"></div><div class="r3 wireframe-r3"></div><div class="r4 wireframe-r4"></div></div></div></div>
<div class="content-fragment social-media-sharing no-wrapper-with-spacing" id="fragment-16374">
<div class="content-fragment-inner wireframe-content-fragment-inner"><div class="content-fragment-top wireframe-content-fragment-top"><div class="r1 wireframe-r1"></div><div class="r2 wireframe-r2"></div><div class="r3 wireframe-r3"></div><div class="r4 wireframe-r4"></div></div><div class="content-fragment-content">

<link href="/CustomWidgets/SocialMediaSharingUC/resources/sharethis.css" rel="stylesheet" type="text/css" /> 
<script src="/CustomWidgets/SocialMediaSharingUC/resources/ShareThis.js" type="text/javascript"></script>
<div class="ShareThisMainPanel">
	<div id="ctl00_content_ctl00_w_16374__9be11d_ctl00_239d48c2_0e15_4379_b512_8ebe2cf95865" class="ShareThis_ChildRootPanel" onmouseover="ShareThisChildRootPanelOnmouseOver(this.id);" onmouseout="ShareThisChildRootPanelOnmouseOut(this.id);">
		<div id="ctl00_content_ctl00_w_16374__9be11d_ctl00_ShareThisBtnCollPanel_9dc1e26288314743885f1b45768f55a2" class="tierOnePanel">
			<div class="buttonPanel">
				<a title="Share on Facebook" class="iconsOnPanel" href="http://www.facebook.com/sharer.php?u=http://blogs.msdn.com/b/ntdebugging/archive/2009/01/09/challenges-of-debugging-optimized-x64-code.aspx&amp;t=TITLE_REPLACE" target="_blank"><img title="Share on Facebook" src="/CustomWidgets/SocialMediaSharingUC/Resources/facebook.gif" style="border-width:0px;" /></a>
			</div><div class="buttonPanel">
				<a title="Share on Twitter" class="iconsOnPanel" href="http://twitter.com/home?status=TITLE_REPLACE : http://blogs.msdn.com/b/ntdebugging/archive/2009/01/09/challenges-of-debugging-optimized-x64-code.aspx" target="_blank"><img title="Share on Twitter" src="/CustomWidgets/SocialMediaSharingUC/Resources/twitter.gif" style="border-width:0px;" /></a>
			</div><div class="buttonPanel">
				<a title="Share on Digg" class="iconsOnPanel" href="http://digg.com/submit?url=http://blogs.msdn.com/b/ntdebugging/archive/2009/01/09/challenges-of-debugging-optimized-x64-code.aspx&amp;title=TITLE_REPLACE" target="_blank"><img title="Share on Digg" src="/CustomWidgets/SocialMediaSharingUC/Resources/digg.gif" style="border-width:0px;" /></a>
			</div><div class="buttonPanel">
				<a title="Share on del.icio.us" class="iconsOnPanel" href="http://del.icio.us/post?url=http://blogs.msdn.com/b/ntdebugging/archive/2009/01/09/challenges-of-debugging-optimized-x64-code.aspx&amp;title=TITLE_REPLACE" target="_blank"><img title="Share on del.icio.us" src="/CustomWidgets/SocialMediaSharingUC/Resources/delicious.gif" style="border-width:0px;" /></a>
			</div><div class="buttonPanel">
				<a title="Share on LinkedIn" class="iconsOnPanel" href="http://www.linkedin.com/shareArticle?mini=true&amp;ro=true&amp;url=http://blogs.msdn.com/b/ntdebugging/archive/2009/01/09/challenges-of-debugging-optimized-x64-code.aspx&amp;title=TITLE_REPLACE&amp;summary=&amp;source=Microsoft&amp;armin=armin" target="_blank"><img title="Share on LinkedIn" src="/CustomWidgets/SocialMediaSharingUC/Resources/linkedin.gif" style="border-width:0px;" /></a>
			</div>
		</div><div id="ctl00_content_ctl00_w_16374__9be11d_ctl00_ShareThisBtnCollPanel_930b57469ca14c18aea35b52f688c97d" class="tierTwoPanel" onclick="TierTwoPanelOnclick(this.id);" onkeypress="if (event.keyCode == 13) TierTwoPanelOnclick(this.id);" onmouseover="TierTwoPanelOnmouseOver(this.id);" onmouseout="TierTwoPanelOnmouseOut(this.id);">
			<div id="ctl00_content_ctl00_w_16374__9be11d_ctl00_ShareThisBtnCollPanel_68ded5aa2d8448ce968aa9f1dd3014c2" class="tierTwoRowPanel">
				<div class="buttonPanel">
					<a title="Share on Reddit" class="iconsOnPanel" href="http://www.reddit.com/submit?url=http://blogs.msdn.com/b/ntdebugging/archive/2009/01/09/challenges-of-debugging-optimized-x64-code.aspx&amp;title=TITLE_REPLACE" target="_blank"><img title="Share on Reddit" src="/CustomWidgets/SocialMediaSharingUC/Resources/reddit.gif" style="border-width:0px;" /></a>
				</div><div class="buttonPanel">
					<a title="Share on Slashdot" class="iconsOnPanel" href="http://slashdot.org/bookmark.pl?url=http://blogs.msdn.com/b/ntdebugging/archive/2009/01/09/challenges-of-debugging-optimized-x64-code.aspx&amp;title=TITLE_REPLACE" target="_blank"><img title="Share on Slashdot" src="/CustomWidgets/SocialMediaSharingUC/Resources/slashdot.gif" style="border-width:0px;" /></a>
				</div><div class="buttonPanel">
					<a title="Share on MySpace" class="iconsOnPanel" href="http://www.myspace.com/Modules/PostTo/Pages/?u=http://blogs.msdn.com/b/ntdebugging/archive/2009/01/09/challenges-of-debugging-optimized-x64-code.aspx&amp;t=TITLE_REPLACE" target="_blank"><img title="Share on MySpace" src="/CustomWidgets/SocialMediaSharingUC/Resources/myspace.gif" style="border-width:0px;" /></a>
				</div><div class="buttonPanel">
					<a title="Share on Windows Live Spaces" class="iconsOnPanel" href="http://spaces.live.com/BlogIt.aspx?Title=TITLE_REPLACE&amp;SourceURL=http://blogs.msdn.com/b/ntdebugging/archive/2009/01/09/challenges-of-debugging-optimized-x64-code.aspx" target="_blank"><img title="Share on Windows Live Spaces" src="/CustomWidgets/SocialMediaSharingUC/Resources/livefavorites.gif" style="border-width:0px;" /></a>
				</div><div class="buttonPanel">
					<a title="Share on Blogmarks" class="iconsOnPanel" href="http://blogmarks.net/my/new.php?mini=1&amp;simple=1&amp;url=http://blogs.msdn.com/b/ntdebugging/archive/2009/01/09/challenges-of-debugging-optimized-x64-code.aspx&amp;title=TITLE_REPLACE&amp;content=" target="_blank"><img title="Share on Blogmarks" src="/CustomWidgets/SocialMediaSharingUC/Resources/blogmarks.gif" style="border-width:0px;" /></a>
				</div>
			</div><div id="ctl00_content_ctl00_w_16374__9be11d_ctl00_ShareThisBtnCollPanel_4bdd5e46065d4b8cbad3f112bb4fafd9" class="tierTwoRowPanel">
				<div class="buttonPanel">
					<a title="Share on Diigo" class="iconsOnPanel" href="http://www.diigo.com/post?url=http://blogs.msdn.com/b/ntdebugging/archive/2009/01/09/challenges-of-debugging-optimized-x64-code.aspx&amp;title=TITLE_REPLACE&amp;desc=" target="_blank"><img title="Share on Diigo" src="/CustomWidgets/SocialMediaSharingUC/Resources/diigo.gif" style="border-width:0px;" /></a>
				</div><div class="buttonPanel">
					<a title="Share on Fark" class="iconsOnPanel" href="http://www.fark.com/cgi/farkit.pl?u=http://blogs.msdn.com/b/ntdebugging/archive/2009/01/09/challenges-of-debugging-optimized-x64-code.aspx&amp;h=TITLE_REPLACE" target="_blank"><img title="Share on Fark" src="/CustomWidgets/SocialMediaSharingUC/Resources/fark.gif" style="border-width:0px;" /></a>
				</div><div class="buttonPanel">
					<a title="Share on Faves" class="iconsOnPanel" href="http://faves.com/Authoring.aspx?u=http://blogs.msdn.com/b/ntdebugging/archive/2009/01/09/challenges-of-debugging-optimized-x64-code.aspx&amp;t=TITLE_REPLACE" target="_blank"><img title="Share on Faves" src="/CustomWidgets/SocialMediaSharingUC/Resources/faves.gif" style="border-width:0px;" /></a>
				</div><div class="buttonPanel">
					<a title="Share on Technorati" class="iconsOnPanel" href="http://technorati.com/faves/?add=http://blogs.msdn.com/b/ntdebugging/archive/2009/01/09/challenges-of-debugging-optimized-x64-code.aspx" target="_blank"><img title="Share on Technorati" src="/CustomWidgets/SocialMediaSharingUC/Resources/technorati.gif" style="border-width:0px;" /></a>
				</div><div class="buttonPanel">
					<a title="Share on FriendFeed" class="iconsOnPanel" href="http://friendfeed.com/?url=http://blogs.msdn.com/b/ntdebugging/archive/2009/01/09/challenges-of-debugging-optimized-x64-code.aspx&amp;title=TITLE_REPLACE" target="_blank"><img title="Share on FriendFeed" src="/CustomWidgets/SocialMediaSharingUC/Resources/friendfeed.gif" style="border-width:0px;" /></a>
				</div>
			</div><div id="ctl00_content_ctl00_w_16374__9be11d_ctl00_ShareThisBtnCollPanel_a4a39bb91db3439ea65a25f19dbb5bbf" class="tierTwoRowPanel">
				<div class="buttonPanel">
					<a title="Share on Windows Live Favorites" class="iconsOnPanel" href="http://favorites.live.com/quickadd.aspx?url=http://blogs.msdn.com/b/ntdebugging/archive/2009/01/09/challenges-of-debugging-optimized-x64-code.aspx&amp;title=TITLE_REPLACE" target="_blank"><img title="Share on Windows Live Favorites" src="/CustomWidgets/SocialMediaSharingUC/Resources/livefavorites.gif" style="border-width:0px;" /></a>
				</div><div class="buttonPanel">
					<a title="Share on Mixx" class="iconsOnPanel" href="http://www.mixx.com/submit?page_url=http://blogs.msdn.com/b/ntdebugging/archive/2009/01/09/challenges-of-debugging-optimized-x64-code.aspx" target="_blank"><img title="Share on Mixx" src="/CustomWidgets/SocialMediaSharingUC/Resources/mixx.gif" style="border-width:0px;" /></a>
				</div><div class="buttonPanel">
					<a title="Share on Newsvine" class="iconsOnPanel" href="http://www.newsvine.com/_tools/seed&amp;save?u=http://blogs.msdn.com/b/ntdebugging/archive/2009/01/09/challenges-of-debugging-optimized-x64-code.aspx&amp;h=TITLE_REPLACE&amp;s=" target="_blank"><img title="Share on Newsvine" src="/CustomWidgets/SocialMediaSharingUC/Resources/newsvine.gif" style="border-width:0px;" /></a>
				</div><div class="buttonPanel">
					<a title="Share on StumbleUpon" class="iconsOnPanel" href="http://www.stumbleupon.com/submit?url=http://blogs.msdn.com/b/ntdebugging/archive/2009/01/09/challenges-of-debugging-optimized-x64-code.aspx&amp;title=TITLE_REPLACE" target="_blank"><img title="Share on StumbleUpon" src="/CustomWidgets/SocialMediaSharingUC/Resources/stumbleupon.gif" style="border-width:0px;" /></a>
				</div><div class="buttonPanel">
					<a title="Share on Google" class="iconsOnPanel" href="http://www.google.com/bookmarks/mark?op=add&amp;bkmk=http://blogs.msdn.com/b/ntdebugging/archive/2009/01/09/challenges-of-debugging-optimized-x64-code.aspx&amp;title=TITLE_REPLACE" target="_blank"><img title="Share on Google" src="/CustomWidgets/SocialMediaSharingUC/Resources/google.gif" style="border-width:0px;" /></a>
				</div>
			</div>
		</div>
	</div><div id="ctl00_content_ctl00_w_16374__9be11d_ctl00_ShowMoreLessButtonsPanel_f30d6046_4943_42f2_8f8d_44406fc64a3f" tabindex="1" class="ShowMoreLessButtonsPanel" onclick="ShowMoreLessButtonsPanelOnClick(this.id);" onkeypress="if (event.keyCode == 13) ShowMoreLessButtonsPanelOnClick(this.id);" onmouseover="ShowMoreLessButtonsPanelOnmouseOver(this.id);" onmouseout="ShowMoreLessButtonsPanelOnmouseOut(this.id);">
		<a class="buttonMoreLess" id="btn_more"><img title="More" src="/CustomWidgets/SocialMediaSharingUC/Resources/more.gif" src="" style="border-width:0px;" /></a><a class="buttonMoreLess" id="btn_less"><img title="Less" src="/CustomWidgets/SocialMediaSharingUC/Resources/less.gif" src="" style="border-width:0px;" /></a>
	</div>
</div><div class="ShareClearFloatsPanel">

</div></div>
<div class="content-fragment-footer"></div>
<div class="content-fragment-bottom wireframe-content-fragment-bottom"><div class="r1 wireframe-r1"></div><div class="r2 wireframe-r2"></div><div class="r3 wireframe-r3"></div><div class="r4 wireframe-r4"></div></div></div></div>
<div class="content-fragment captcha-blog-post-comment-form no-wrapper-with-spacing" id="fragment-16375">
<div class="content-fragment-inner wireframe-content-fragment-inner"><div class="content-fragment-top wireframe-content-fragment-top"><div class="r1 wireframe-r1"></div><div class="r2 wireframe-r2"></div><div class="r3 wireframe-r3"></div><div class="r4 wireframe-r4"></div></div><div class="content-fragment-content">

    
            <div class="field-list-header"></div>
            <fieldset class="field-list">
                <legend class="field-list-description">Leave a Comment</legend>
                <ul class="field-list">
                    <li id="ctl00_content_ctl00_w_16375__9be11d_ctl00_ctl00_ctl00_ctl05_bpCommentForm_ctl05_NameField" class="field-item">
                        <label for="ctl00_content_ctl00_w_16375__9be11d_ctl00_ctl00_ctl00_ctl05_bpCommentForm_ctl05_tbName" class="field-item-header">Name</label>
                        <span class="field-item-input"><input name="ctl00$content$ctl00$w_16375$_9be11d$ctl00$ctl00$ctl00$ctl05$bpCommentForm$ctl05$tbName" type="text" size="60" id="ctl00_content_ctl00_w_16375__9be11d_ctl00_ctl00_ctl00_ctl05_bpCommentForm_ctl05_tbName" /></span>
                        <span id="ctl00_content_ctl00_w_16375__9be11d_ctl00_ctl00_ctl00_ctl05_bpCommentForm_ctl05_tbNameRFV" style="color:Red;display:none;"><span class="field-item-validation">*</span></span>
                    </li>
                    <li class="field-item post-body">
                        <label for="ctl00_content_ctl00_w_16375__9be11d_ctl00_ctl00_ctl00_ctl05_bpCommentForm_ctl05_tbComment" class="field-item-header">Comment</label>
                        <span class="field-item-input"><textarea name="ctl00$content$ctl00$w_16375$_9be11d$ctl00$ctl00$ctl00$ctl05$bpCommentForm$ctl05$tbComment" rows="2" cols="20" id="ctl00_content_ctl00_w_16375__9be11d_ctl00_ctl00_ctl00_ctl05_bpCommentForm_ctl05_tbComment" style="height:100px;"></textarea></span>
                        <span id="ctl00_content_ctl00_w_16375__9be11d_ctl00_ctl00_ctl00_ctl05_bpCommentForm_ctl05_tbCommentRFV" style="color:Red;display:none;"><span class="field-item-validation">* Please enter a comment</span></span>
                    </li>
                    <li class="field-item">
                        
                           <span id="ctl00_content_ctl00_w_16375__9be11d_ctl00_ctl00_ctl00_ctl05_bpCommentForm_ctl05_invisibleCaptcha" style="color:Red;display:none;">*</span><span id="ctl00_content_ctl00_w_16375__9be11d_ctl00_ctl00_ctl00_ctl05_bpCommentForm_ctl05_invisibleCaptcha_subtext_captcha">Please add 6 and 7 and type the answer here: <input type="text" name="ctl00_content_ctl00_w_16375__9be11d_ctl00_ctl00_ctl00_ctl05_bpCommentForm_ctl05_invisibleCaptcha_visibleanswer" value="" /></span>


                    </li>
                    <li class="field-item">
                        <span class="field-item-input"><a id="ctl00_content_ctl00_w_16375__9be11d_ctl00_ctl00_ctl00_ctl05_bpCommentForm_ctl05_btnSubmit" class="internal-link add-reply" href="javascript:WebForm_DoPostBackWithOptions(new WebForm_PostBackOptions(&quot;ctl00$content$ctl00$w_16375$_9be11d$ctl00$ctl00$ctl00$ctl05$bpCommentForm$ctl05$btnSubmit&quot;, &quot;&quot;, true, &quot;BlogPostCommentForm-ctl00_content_ctl00_w_16375__9be11d_ctl00_ctl00&quot;, &quot;&quot;, false, true))"><span></span>Post</a></span>
                    </li>
                </ul>
            </fieldset>
            <div class="field-list-footer"></div>
        
    
</div>
<div class="content-fragment-footer"></div>
<div class="content-fragment-bottom wireframe-content-fragment-bottom"><div class="r1 wireframe-r1"></div><div class="r2 wireframe-r2"></div><div class="r3 wireframe-r3"></div><div class="r4 wireframe-r4"></div></div></div></div>
<div class="content-fragment blog-feedback-list no-wrapper-with-spacing" id="fragment-16376">
<div class="content-fragment-inner wireframe-content-fragment-inner"><div class="content-fragment-top wireframe-content-fragment-top"><div class="r1 wireframe-r1"></div><div class="r2 wireframe-r2"></div><div class="r3 wireframe-r3"></div><div class="r4 wireframe-r4"></div></div><div class="content-fragment-content">




<script type="text/javascript">
	// <![CDATA[
	$(document).ready(function() {
	$(document).bind('telligent_blogs_commentposted', function(e, message) { 
	            window.setTimeout(new Function(ctl00_content_ctl00_w_16376__9be11d_ctl00_ctl00_DelayedFeedbackList.Reload()), 100); 
	            return true; 
	    });
	    ctl00_content_ctl00_w_16376__9be11d_ctl00_ctl00_DelayedFeedbackList.Reload();
	});
// ]]>
</script>

	

<div id="ctl00_content_ctl00_w_16376__9be11d_ctl00_ctl00_DelayedFeedbackList"><input type="hidden" name="ctl00$content$ctl00$w_16376$_9be11d$ctl00$ctl00$DelayedFeedbackList" value="true:" />
	    
			    <a name="comments"></a>
			    <div class="content-list-header"></div>
			    <div class="content-list-name">
				    
						    <a class="internal-link rss" href="/b/ntdebugging/rsscomments.aspx?WeblogPostID=9302612"><span></span>Comments</a>
					    
			    </div>
			    <ul class="content-list">
		    
			    
					    <li class="content-item">
						    <div class="full-post-outer wireframe-full-post-outer"><div class="full-post-header"><div class="r wireframe-r"></div></div>
						    <div class="full-post"><div class="full-post-inner wireframe-full-post-inner">
				    
			    <div class="post-author">
				    <span class="avatar"><a href="/EdZ/ProfileUrlRedirect.ashx"><img src="/utility/anonymous.gif" alt="" style="border-width:0px;max-height:32px;max-width:32px;" /></a></span>
				    
                    <span class="profile-usercard-hover" data-profile-userid='00000000-0000-0000-0000-000000000000'>
				        <span class="user-name"><a class="internal-link view-user-profile" href="/EdZ/ProfileUrlRedirect.ashx"><span></span>EdZ</a></span>
				        
                    </span>
			    </div>
			    <div class="post-date">
				    <span class="value">10 Jan 2009 12:14 PM</span>
			    </div>
			    <div class="post-content user-defined-markup"><P>This is a great introduction to bridge the gap for those who are familiar with x86 debugging and are trying to make the jump to x64 debugging. Having done some x86 debugging and having limited time to spend learning new techniques for x64, this detailed and well documented example, is an excellent start!</P>
<DIV class=commentowner>[Thanks for the great feedback, EdZ!]</DIV><div style="clear:both;"></div></div>
			    <div class="post-actions">
				    
			    </div>
			    
						    </div>
						    </div><div class="full-post-footer"><div class="r wireframe-r"></div></div></div>
					    </li>
				    
		    
			    
					    <li class="content-item">
						    <div class="full-post-outer wireframe-full-post-outer"><div class="full-post-header"><div class="r wireframe-r"></div></div>
						    <div class="full-post"><div class="full-post-inner wireframe-full-post-inner">
				    
			    <div class="post-author">
				    
				    <span class="avatar"><img src="/utility/anonymous.gif" alt="" style="border-width:0px;max-height:32px;max-width:32px;" /></span>
                    <span class="profile-usercard-hover" data-profile-userid='00000000-0000-0000-0000-000000000000'>
				        
				        <span class="user-name">Marc Sherman</span>
                    </span>
			    </div>
			    <div class="post-date">
				    <span class="value">12 Jan 2009 11:32 AM</span>
			    </div>
			    <div class="post-content user-defined-markup"><P>Very informative!!</P>
<P>thank you</P><div style="clear:both;"></div></div>
			    <div class="post-actions">
				    
			    </div>
			    
						    </div>
						    </div><div class="full-post-footer"><div class="r wireframe-r"></div></div></div>
					    </li>
				    
		    
			    
					    <li class="content-item">
						    <div class="full-post-outer wireframe-full-post-outer"><div class="full-post-header"><div class="r wireframe-r"></div></div>
						    <div class="full-post"><div class="full-post-inner wireframe-full-post-inner">
				    
			    <div class="post-author">
				    
				    <span class="avatar"><img src="/utility/anonymous.gif" alt="" style="border-width:0px;max-height:32px;max-width:32px;" /></span>
                    <span class="profile-usercard-hover" data-profile-userid='00000000-0000-0000-0000-000000000000'>
				        
				        <span class="user-name">Pushkar Prasad</span>
                    </span>
			    </div>
			    <div class="post-date">
				    <span class="value">20 Jan 2009 2:11 PM</span>
			    </div>
			    <div class="post-content user-defined-markup"><p>Thanks Trey. This is insightful. I have attended training related to unassembly and still I always loose track, but now I can save this as a cube note for reference.</p><div style="clear:both;"></div></div>
			    <div class="post-actions">
				    
			    </div>
			    
						    </div>
						    </div><div class="full-post-footer"><div class="r wireframe-r"></div></div></div>
					    </li>
				    
		    
			    
					    <li class="content-item">
						    <div class="full-post-outer wireframe-full-post-outer"><div class="full-post-header"><div class="r wireframe-r"></div></div>
						    <div class="full-post"><div class="full-post-inner wireframe-full-post-inner">
				    
			    <div class="post-author">
				    
				    <span class="avatar"><img src="/utility/anonymous.gif" alt="" style="border-width:0px;max-height:32px;max-width:32px;" /></span>
                    <span class="profile-usercard-hover" data-profile-userid='00000000-0000-0000-0000-000000000000'>
				        
				        <span class="user-name">Yuhong Bao</span>
                    </span>
			    </div>
			    <div class="post-date">
				    <span class="value">20 Feb 2009 7:15 PM</span>
			    </div>
			    <div class="post-content user-defined-markup"><p>BTW, the same challenges can happen when debugging LTCG-optimized x86 code.</p><div style="clear:both;"></div></div>
			    <div class="post-actions">
				    
			    </div>
			    
						    </div>
						    </div><div class="full-post-footer"><div class="r wireframe-r"></div></div></div>
					    </li>
				    
		    
			    
					    <li class="content-item">
						    <div class="full-post-outer wireframe-full-post-outer"><div class="full-post-header"><div class="r wireframe-r"></div></div>
						    <div class="full-post"><div class="full-post-inner wireframe-full-post-inner">
				    
			    <div class="post-author">
				    
				    <span class="avatar"><img src="/utility/anonymous.gif" alt="" style="border-width:0px;max-height:32px;max-width:32px;" /></span>
                    <span class="profile-usercard-hover" data-profile-userid='00000000-0000-0000-0000-000000000000'>
				        
				        <span class="user-name">Cheong</span>
                    </span>
			    </div>
			    <div class="post-date">
				    <span class="value">2 Mar 2011 5:18 PM</span>
			    </div>
			    <div class="post-content user-defined-markup"><p>Sorry, I found the link to MSDN ms794533.aspx has been removed.</p>
<p>What topic is that about?</p>
<p>[Thank you for bringing this to our attention.&nbsp; MSDN re-wrote that content, you can find equivalent information at <a href="http://msdn.microsoft.com/en-us/library/7kcdt6fy.aspx">http://msdn.microsoft.com/en-us/library/7kcdt6fy.aspx</a>]</p><div style="clear:both;"></div></div>
			    <div class="post-actions">
				    
			    </div>
			    
						    </div>
						    </div><div class="full-post-footer"><div class="r wireframe-r"></div></div></div>
					    </li>
				    
		    
			    
					    <li class="content-item">
						    <div class="full-post-outer wireframe-full-post-outer"><div class="full-post-header"><div class="r wireframe-r"></div></div>
						    <div class="full-post"><div class="full-post-inner wireframe-full-post-inner">
				    
			    <div class="post-author">
				    
				    <span class="avatar"><img src="/utility/anonymous.gif" alt="" style="border-width:0px;max-height:32px;max-width:32px;" /></span>
                    <span class="profile-usercard-hover" data-profile-userid='00000000-0000-0000-0000-000000000000'>
				        
				        <span class="user-name">Ange</span>
                    </span>
			    </div>
			    <div class="post-date">
				    <span class="value">3 Mar 2011 1:20 AM</span>
			    </div>
			    <div class="post-content user-defined-markup"><p>can you check the 1st link ? &#39;This content has been removed.&#39;</p>
<p>[Thank you for bringing this to our attention.&nbsp; MSDN re-wrote that content, you can find equivalent information at <a href="http://msdn.microsoft.com/en-us/library/7kcdt6fy.aspx">http://msdn.microsoft.com/en-us/library/7kcdt6fy.aspx</a>]</p><div style="clear:both;"></div></div>
			    <div class="post-actions">
				    
			    </div>
			    
						    </div>
						    </div><div class="full-post-footer"><div class="r wireframe-r"></div></div></div>
					    </li>
				    
		    
			    </ul>
			    <div class="content-list-footer"></div>
		     
	    <div class="pager">
        <span class="summary">Page 1 of 1 (6 items)</span>
    </div>
	</div>
</div>
<div class="content-fragment-footer"></div>
<div class="content-fragment-bottom wireframe-content-fragment-bottom"><div class="r1 wireframe-r1"></div><div class="r2 wireframe-r2"></div><div class="r3 wireframe-r3"></div><div class="r4 wireframe-r4"></div></div></div></div>
</div>
</div>
</div>
<div class="layout-footer"></div>
</div></div>

			<div class="footer-fragments-header"></div>
<div class="footer-fragments"><div class="footer-fragment copyright-info" id="footer-fragment-247403536">

<ul class="footer-fragment-links">
    <li class="message copyright">© 2011 Microsoft Corporation.</li>
	<li class="message termsOfService"><a href="http://msdn.microsoft.com/cc300389">Terms of Use</a> </li>
    <li class="message trademarks"><a href="http://www.microsoft.com/library/toolbar/3.0/trademarks/en-us.mspx">Trademarks</a> </li>
    <li class="message privacy"><a href="http://www.microsoft.com/info/privacy.mspx">Privacy Statement</a> </li>
    <li class="message abuse">
    
            <a id="ctl00_footer_fragment_247403536__9be11d_ctl00_ctl00_ctl01_lnkAbuse" href="javascript:WebForm_DoPostBackWithOptions(new WebForm_PostBackOptions(&quot;ctl00$footer_fragment_247403536$_9be11d$ctl00$ctl00$ctl01$lnkAbuse&quot;, &quot;&quot;, true, &quot;&quot;, &quot;&quot;, false, true))">Report Abuse</a>
        
    </li>
    
</ul></div><div class="footer-fragment omniture-footer-fragment" id="footer-fragment-247403537">


<script type="text/javascript" src="/utility/js/omni_rsid_msdn_current.js"></script>
        <noscript><a href="http://www.omniture.com" title="Web Analytics"><img
        src="http://msstomsdnblogs.112.2O7.net/b/ss/msstomsdnblogs/1/H.20.2--NS/0"
        height="1" width="1" border="0" alt="" /></a></noscript>

</div></div>
<div class="footer-fragments-footer"></div>
		
<script type="text/javascript">
//<![CDATA[
var Page_Validators =  new Array(document.getElementById("ctl00_content_ctl00_w_16368__9be11d_ctl00_ctl01_ctl01_Validator"), document.getElementById("ctl00_content_ctl00_w_16375__9be11d_ctl00_ctl00_ctl00_ctl05_bpCommentForm_ctl05_tbNameRFV"), document.getElementById("ctl00_content_ctl00_w_16375__9be11d_ctl00_ctl00_ctl00_ctl05_bpCommentForm_ctl05_tbCommentRFV"), document.getElementById("ctl00_content_ctl00_w_16375__9be11d_ctl00_ctl00_ctl00_ctl05_bpCommentForm_ctl05_invisibleCaptcha"));
//]]>
</script>

<script type="text/javascript">
//<![CDATA[
var ctl00_content_ctl00_w_16368__9be11d_ctl00_ctl01_ctl01_Validator = document.all ? document.all["ctl00_content_ctl00_w_16368__9be11d_ctl00_ctl01_ctl01_Validator"] : document.getElementById("ctl00_content_ctl00_w_16368__9be11d_ctl00_ctl01_ctl01_Validator");
ctl00_content_ctl00_w_16368__9be11d_ctl00_ctl01_ctl01_Validator.display = "Dynamic";
ctl00_content_ctl00_w_16368__9be11d_ctl00_ctl01_ctl01_Validator.evaluationfunction = "CustomValidatorEvaluateIsValid";
var ctl00_content_ctl00_w_16375__9be11d_ctl00_ctl00_ctl00_ctl05_bpCommentForm_ctl05_tbNameRFV = document.all ? document.all["ctl00_content_ctl00_w_16375__9be11d_ctl00_ctl00_ctl00_ctl05_bpCommentForm_ctl05_tbNameRFV"] : document.getElementById("ctl00_content_ctl00_w_16375__9be11d_ctl00_ctl00_ctl00_ctl05_bpCommentForm_ctl05_tbNameRFV");
ctl00_content_ctl00_w_16375__9be11d_ctl00_ctl00_ctl00_ctl05_bpCommentForm_ctl05_tbNameRFV.controltovalidate = "ctl00_content_ctl00_w_16375__9be11d_ctl00_ctl00_ctl00_ctl05_bpCommentForm_ctl05_tbName";
ctl00_content_ctl00_w_16375__9be11d_ctl00_ctl00_ctl00_ctl05_bpCommentForm_ctl05_tbNameRFV.display = "Dynamic";
ctl00_content_ctl00_w_16375__9be11d_ctl00_ctl00_ctl00_ctl05_bpCommentForm_ctl05_tbNameRFV.validationGroup = "BlogPostCommentForm-ctl00_content_ctl00_w_16375__9be11d_ctl00_ctl00";
ctl00_content_ctl00_w_16375__9be11d_ctl00_ctl00_ctl00_ctl05_bpCommentForm_ctl05_tbNameRFV.evaluationfunction = "RequiredFieldValidatorEvaluateIsValid";
ctl00_content_ctl00_w_16375__9be11d_ctl00_ctl00_ctl00_ctl05_bpCommentForm_ctl05_tbNameRFV.initialvalue = "";
var ctl00_content_ctl00_w_16375__9be11d_ctl00_ctl00_ctl00_ctl05_bpCommentForm_ctl05_tbCommentRFV = document.all ? document.all["ctl00_content_ctl00_w_16375__9be11d_ctl00_ctl00_ctl00_ctl05_bpCommentForm_ctl05_tbCommentRFV"] : document.getElementById("ctl00_content_ctl00_w_16375__9be11d_ctl00_ctl00_ctl00_ctl05_bpCommentForm_ctl05_tbCommentRFV");
ctl00_content_ctl00_w_16375__9be11d_ctl00_ctl00_ctl00_ctl05_bpCommentForm_ctl05_tbCommentRFV.controltovalidate = "ctl00_content_ctl00_w_16375__9be11d_ctl00_ctl00_ctl00_ctl05_bpCommentForm_ctl05_tbComment";
ctl00_content_ctl00_w_16375__9be11d_ctl00_ctl00_ctl00_ctl05_bpCommentForm_ctl05_tbCommentRFV.display = "Dynamic";
ctl00_content_ctl00_w_16375__9be11d_ctl00_ctl00_ctl00_ctl05_bpCommentForm_ctl05_tbCommentRFV.validationGroup = "BlogPostCommentForm-ctl00_content_ctl00_w_16375__9be11d_ctl00_ctl00";
ctl00_content_ctl00_w_16375__9be11d_ctl00_ctl00_ctl00_ctl05_bpCommentForm_ctl05_tbCommentRFV.evaluationfunction = "RequiredFieldValidatorEvaluateIsValid";
ctl00_content_ctl00_w_16375__9be11d_ctl00_ctl00_ctl00_ctl05_bpCommentForm_ctl05_tbCommentRFV.initialvalue = "";
var ctl00_content_ctl00_w_16375__9be11d_ctl00_ctl00_ctl00_ctl05_bpCommentForm_ctl05_invisibleCaptcha = document.all ? document.all["ctl00_content_ctl00_w_16375__9be11d_ctl00_ctl00_ctl00_ctl05_bpCommentForm_ctl05_invisibleCaptcha"] : document.getElementById("ctl00_content_ctl00_w_16375__9be11d_ctl00_ctl00_ctl00_ctl05_bpCommentForm_ctl05_invisibleCaptcha");
ctl00_content_ctl00_w_16375__9be11d_ctl00_ctl00_ctl00_ctl05_bpCommentForm_ctl05_invisibleCaptcha.errormessage = "*";
ctl00_content_ctl00_w_16375__9be11d_ctl00_ctl00_ctl00_ctl05_bpCommentForm_ctl05_invisibleCaptcha.display = "Dynamic";
ctl00_content_ctl00_w_16375__9be11d_ctl00_ctl00_ctl00_ctl05_bpCommentForm_ctl05_invisibleCaptcha.validationGroup = "BlogPostCommentForm-ctl00_content_ctl00_w_16375__9be11d_ctl00_ctl00";
//]]>
</script>

<script type="text/javascript">
// <![CDATA[
ctl00_content_ctl00 = new ContentFragmentPageCustomCallback('ctl00_content_ctl00',new Function('mode','parameters','callback','errorCallback','context','ctl00_content_ctl00_ctl00._doCallback(mode+\':\'+parameters,callback,context,errorCallback);'));
// ]]>
</script>
<!--
<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
xmlns:dc="http://purl.org/dc/elements/1.1/"
xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/">
<rdf:Description
rdf:about="http://blogs.msdn.com/b/ntdebugging/archive/2009/01/09/challenges-of-debugging-optimized-x64-code.aspx"
dc:identifier="http://blogs.msdn.com/b/ntdebugging/archive/2009/01/09/challenges-of-debugging-optimized-x64-code.aspx"
dc:title="Challenges of Debugging Optimized x64 Code"
trackback:ping="http://blogs.msdn.com/b/ntdebugging/trackback.ashx?WeblogPostID=9302612" />
</rdf:RDF>
-->
<script type="text/javascript">
// <![CDATA[
Telligent_Modal.Configure('\/utility\/loading.htm',['modal'],['modal-title','modal-title-2','modal-title-3','modal-title-4'],['modal-close'],['modal-content','modal-content-2'],['modal-footer','modal-footer-2','modal-footer-3'],['modal-resize'],['modal-mask'],10000,false,true,true);
// ]]>
</script><script type="text/javascript">
// <![CDATA[
window.ctl00_header_fragment_247403540__9be11d_ctl00_SearchPopup = new Telligent_PopupPanel('ctl00_header_fragment_247403540__9be11d_ctl00_SearchPopup','menu search-content results','downright',100,null,null,true,'ctl00_header_fragment_247403540__9be11d_ctl00_SearchPopup',null,null);
// ]]>
</script><script type="text/javascript">
// <![CDATA[
window.ctl00_header_fragment_247403541__9be11d_ctl00_ctl00_GroupNavigationPopup = new Telligent_PopupPanel('ctl00_header_fragment_247403541__9be11d_ctl00_ctl00_GroupNavigationPopup','menu group-navigation-content','down',100,null,null,false,'ctl00_header_fragment_247403541__9be11d_ctl00_ctl00_GroupNavigationPopup',new Function('Core_GroupNavigation_MouseOverPopup(ctl00_header_fragment_247403541)'),new Function('Core_GroupNavigation_MouseOutPopup(ctl00_header_fragment_247403541)'));
// ]]>
</script><script type="text/javascript">
// <![CDATA[
window.ctl00_content_ctl00_ctl00 = new Telligent_CallbackManager('ctl00_content_ctl00_ctl00','ctl00$content$ctl00$ctl00','aspnetForm');
// ]]>
</script>
<script type="text/javascript">
//<![CDATA[

var Page_ValidationActive = false;
if (typeof(ValidatorOnLoad) == "function") {
    ValidatorOnLoad();
}

function ValidatorOnSubmit() {
    if (Page_ValidationActive) {
        return ValidatorCommonOnSubmit();
    }
    else {
        return true;
    }
}
        //]]>
</script>
<script type="text/javascript">
// <![CDATA[
var ctl00_content_ctl00_w_16373__9be11d_ctl00_ctl01=new RateableContentRating('ctl00_content_ctl00_w_16373__9be11d_ctl00_ctl01','ctl00_content_ctl00_w_16373__9be11d_ctl00_ctl01','ctl00_content_ctl00_w_16373__9be11d_ctl00_ctl01_Value', 5, '/Utility/images/', false, 'rating','rating active','rating readonly',['Terrible','Poor','Fair','Average','Good','Excellent'],true,true);
// ]]>
</script>
<script type="text/javascript">
//<![CDATA[

WebForm_InitCallback();//]]>
</script>
<script type="text/javascript">
				// <![CDATA[
				var ctl00_content_ctl00_w_16373__9be11d_ctl00_ctl01_ajax={"SaveRating":function(rating,successFunction,failureFunction){WebForm_DoCallback('ctl00$content$ctl00$w_16373$_9be11d$ctl00$ctl01',rating,successFunction,rating,failureFunction,true)}};
				// ]]>
				</script><script type="text/javascript">
// <![CDATA[
window.ctl00_content_ctl00_w_16373__9be11d_ctl00_ctl15_ctl01 = new Telligent_InlineEditor('ctl00_content_ctl00_w_16373__9be11d_ctl00_ctl15_ctl01','ctl00_content_ctl00_w_16373__9be11d_ctl00_ctl15_ctl01_Container',new Function('id', 'p', 'ctl00_content_ctl00_w_16373__9be11d_ctl00_ctl15_ctl01_InlineTagEditor.SetInlineEditorPanelAndParameter(id,p);'),new Function('return ctl00_content_ctl00_w_16373__9be11d_ctl00_ctl15_ctl01_InlineTagEditor.GetContent();'),new Function('c', 'ctl00_content_ctl00_w_16373__9be11d_ctl00_ctl15_ctl01_InlineTagEditor.SetContent(c);'),null,new Function('ctl00_content_ctl00_w_16373__9be11d_ctl00_ctl15_ctl01_InlineTagEditor.Focus();'),new Function('w', 'h', 'ctl00_content_ctl00_w_16373__9be11d_ctl00_ctl15_ctl01_InlineTagEditor.Resize(w,h);'),300,90);
// ]]>
</script><script type="text/javascript">
// <![CDATA[
var ctl00_content_ctl00_w_16373__9be11d_ctl00_ctl15_ctl01_TagEditor = new TagEditor('ctl00_content_ctl00_w_16373__9be11d_ctl00_ctl15_ctl01_TagEditor',[['Aman','Aman'],['Anurag','Anurag'],['Architecture','Architecture'],['assembler','assembler'],['Bob','Bob'],['boot','boot'],['Bryan','Bryan'],['bugcheck','bugcheck'],['Burrough','Burrough'],['Chad','Chad'],['chat','chat'],['Cluster','Cluster'],['consumption','consumption'],['David','David'],['Deadlock','Deadlock'],['debug','debug'],['Debug Ninja','Debug Ninja'],['Debug Tips','Debug Tips'],['Debugging','Debugging'],['Dennis','Dennis'],['Disk','Disk'],['East','East'],['ETW','ETW'],['Fundamentals Exercise','Fundamentals Exercise'],['GEC','GEC'],['GEC 2009','GEC 2009'],['Graham','Graham'],['gui','gui'],['handles','handles'],['Hangs','Hangs'],['hardware','hardware'],['Heap','Heap'],['i\/o','i\/o'],['internals','internals'],['IPP','IPP'],['Ivan','Ivan'],['Jason','Jason'],['Jeff','Jeff'],['joel','joel'],['John','John'],['kernel','kernel'],['kernrate','kernrate'],['leak','leak'],['Links','Links'],['Louis','Louis'],['lpc','lpc'],['Managed','Managed'],['Mark','Mark'],['Matt','Matt'],['Matthew','Matthew'],['Mike','Mike'],['naresh','naresh'],['NDIS','NDIS'],['Netmon','Netmon'],['Nischay','Nischay'],['NTFS','NTFS'],['ODbgExt','ODbgExt'],['Omer','Omer'],['Pages','Pages'],['Parser','Parser'],['Pool','Pool'],['PTE','PTE'],['Pushkar','Pushkar'],['Puzzler','Puzzler'],['Queue','Queue'],['Remote Debugging','Remote Debugging'],['Rob','Rob'],['Robot','Robot'],['Ron','Ron'],['roy','roy'],['ryan','ryan'],['Ryanman','Ryanman'],['Sabin','Sabin'],['Scoping','Scoping'],['Scott','Scott'],['SCSI','SCSI'],['services','services'],['shutdown','shutdown'],['Somak','Somak'],['startup','startup'],['Steve','Steve'],['storport','storport'],['svchost','svchost'],['Talkback','Talkback'],['Tate','Tate'],['Tate Xperf','Tate Xperf'],['timeout','timeout'],['Todd','Todd'],['Tools','Tools'],['Trey','Trey'],['UMDH','UMDH'],['utilities','utilities'],['Venkatesh','Venkatesh'],['video','video'],['windbg','windbg'],['windows','windows'],['windows internals','windows internals'],['WMI','WMI'],['x64','x64'],['XPERF','XPERF']],'ctl00_content_ctl00_w_16373__9be11d_ctl00_ctl15_ctl01_Tags');
// ]]>
</script><script type="text/javascript">
// <![CDATA[
var ctl00_content_ctl00_w_16373__9be11d_ctl00_ctl15_ctl01_InlineTagEditor = new InlineTagEditor('ctl00_content_ctl00_w_16373__9be11d_ctl00_ctl15_ctl01_InlineTagEditor','ctl00_content_ctl00_w_16373__9be11d_ctl00_ctl15_ctl01','ctl00_content_ctl00_w_16373__9be11d_ctl00_ctl15_ctl01_Container','ctl00_content_ctl00_w_16373__9be11d_ctl00_ctl15_ctl01_Tags');
// ]]>
</script><script type="text/javascript">
// <![CDATA[
window.ctl00_content_ctl00_w_16373__9be11d_ctl00_ctl15_ctl02 = new Telligent_InlineEditorPanel('ctl00_content_ctl00_w_16373__9be11d_ctl00_ctl15_ctl02','ctl00_content_ctl00_w_16373__9be11d_ctl00_ctl15_ctl02','ctl00_content_ctl00_w_16373__9be11d_ctl00_ctl15_ctl02_State','ctl00_content_ctl00_w_16373__9be11d_ctl00_ctl15_ctl01',false,null,null,null);
// ]]>
</script>
<script type="text/javascript">
//<![CDATA[
$('#ctl00_content_ctl00_w_16375__9be11d_ctl00_ctl00_ctl00_ctl05_bpCommentForm_ctl05_tbComment').autoResize({animate : false,extraSpace : 0,limit : 3000});//]]>
</script>
<script type="text/javascript">
subtext_invisible_captcha_hideFromJavascriptEnabledBrowsers('ctl00_content_ctl00_w_16375__9be11d_ctl00_ctl00_ctl00_ctl05_bpCommentForm_ctl05_invisibleCaptcha_subtext_captcha');
</script><script type="text/javascript">
subtext_invisible_captcha_setAnswer(6, 7, 'ctl00_content_ctl00_w_16375__9be11d_ctl00_ctl00_ctl00_ctl05_bpCommentForm_ctl05_invisibleCaptcha_answer');
</script><script type="text/javascript">
// <![CDATA[
window.ctl00_content_ctl00_w_16376__9be11d_ctl00_ctl00_DelayedFeedbackList = new DelayedContent('ctl00_content_ctl00_w_16376__9be11d_ctl00_ctl00_DelayedFeedbackList','ctl00_content_ctl00_w_16376__9be11d_ctl00_ctl00_DelayedFeedbackList','ctl00_content_ctl00._customCallback(\'fragment-16376\',\'ctl00$content$ctl00$w_16376$_9be11d$ctl00$ctl00$DelayedFeedbackList\',argument,null,callback,null)',true,true,null);
// ]]>
</script></form>
      
    <script type="text/javascript">
        $(window).load(function () {
            $.getScript('http://widgets.membership.microsoft.com/v1/loader.js?brand=technet&lang=en-US', function () {
            });
        });
    </script>
    
	</body>
</html>
